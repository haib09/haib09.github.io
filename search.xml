<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>化繁为简的IndexedDB</title>
      <link href="/%E5%8C%96%E7%B9%81%E4%B8%BA%E7%AE%80%E7%9A%84IndexedDB/"/>
      <url>/%E5%8C%96%E7%B9%81%E4%B8%BA%E7%AE%80%E7%9A%84IndexedDB/</url>
      
        <content type="html"><![CDATA[<h4 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h4><p>最近做一个项目需要缓存一些数据，不多说直接上<code>localStorage.setItem</code>，没想到数据太大被限制了。</p><blockquote><p>“setStorage:fail QuotaExceededError: Failed to execute ‘setItem’ on ‘Storage’: Setting the value of ‘87b0ac0beb0984f4d792ae03f7264859’ exceeded the quota.”<br>了解了一下<code>localStorage</code>容量一般在 5M-10M 左右，用来缓存一些简单的数据基本够用。其实浏览器也提供了大数据量的本地存储，像是 <code>IndexedDB</code> 存储数据大小一般在 <code>250M</code> 以上。容量大了但是使用方式也复杂了，因为我只是简单的使用存储一些缓存数据而已，并没有更深的需求，于是为了让 <code>IndexedDB</code> 的使用更加简单和直观，本文将通过将 <code>IndexedDB</code> 的操作 <code>Promise</code> 化，从而简化前端数据存储的操作。</p></blockquote><h4 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Promise化 IndexedDB 请求</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">IDBRequest</span>&#125; request IndexedDB请求对象</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span> &#123;<span class="type">Promise</span>&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">promisifyRequest</span>(<span class="params">request</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">        request.<span class="property">oncomplete</span> = request.<span class="property">onsuccess</span> = <span class="function">() =&gt;</span> <span class="title function_">resolve</span>(request.<span class="property">result</span>);</span><br><span class="line">        request.<span class="property">onabort</span> = request.<span class="property">onerror</span> = <span class="function">() =&gt;</span> <span class="title function_">reject</span>(request.<span class="property">error</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 创建数据库存储</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">string</span>&#125; dbName 数据库名称</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">string</span>&#125; storeName 存储库名称</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span> &#123;<span class="type">Function</span>&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">createStore</span>(<span class="params">dbName, storeName</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> request = indexedDB.<span class="title function_">open</span>(dbName);</span><br><span class="line">    request.<span class="property">onupgradeneeded</span> = <span class="function">() =&gt;</span> request.<span class="property">result</span>.<span class="title function_">createObjectStore</span>(storeName);</span><br><span class="line">    <span class="keyword">const</span> dbPromise = <span class="title function_">promisifyRequest</span>(request);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="function">(<span class="params">mode, callback</span>) =&gt;</span> dbPromise.<span class="title function_">then</span>(<span class="function"><span class="params">db</span> =&gt;</span></span><br><span class="line">        <span class="title function_">callback</span>(db.<span class="title function_">transaction</span>(storeName, mode).<span class="title function_">objectStore</span>(storeName))</span><br><span class="line">    );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取默认存储实例</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">let</span> defaultStore;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getDefaultStore</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> defaultStore || (defaultStore = <span class="title function_">createStore</span>(<span class="string">&#x27;uniapp-store&#x27;</span>, <span class="string">&#x27;default&#x27;</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取数据</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">string</span>&#125; key 键</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">Function</span>&#125; customStore 自定义存储实例</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span> &#123;<span class="type">Promise</span>&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">get</span>(<span class="params">key, customStore = getDefaultStore()</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">customStore</span>(<span class="string">&#x27;readonly&#x27;</span>, <span class="function"><span class="params">store</span> =&gt;</span> <span class="title function_">promisifyRequest</span>(store.<span class="title function_">get</span>(key)));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 设置数据</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">string</span>&#125; key 键</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">any</span>&#125; value 值</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">Function</span>&#125; customStore 自定义存储实例</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span> &#123;<span class="type">Promise</span>&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">set</span>(<span class="params">key, value, customStore = getDefaultStore()</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">customStore</span>(<span class="string">&#x27;readwrite&#x27;</span>, <span class="function"><span class="params">store</span> =&gt;</span> &#123;</span><br><span class="line">        store.<span class="title function_">put</span>(value, key);</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_">promisifyRequest</span>(store.<span class="property">transaction</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 删除数据</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">string</span>&#125; key 键</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">Function</span>&#125; customStore 自定义存储实例</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span> &#123;<span class="type">Promise</span>&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">del</span>(<span class="params">key, customStore = getDefaultStore()</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">customStore</span>(<span class="string">&#x27;readwrite&#x27;</span>, <span class="function"><span class="params">store</span> =&gt;</span> &#123;</span><br><span class="line">        store.<span class="title function_">delete</span>(key);</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_">promisifyRequest</span>(store.<span class="property">transaction</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 清空存储</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">Function</span>&#125; customStore 自定义存储实例</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span> &#123;<span class="type">Promise</span>&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">clear</span>(<span class="params">customStore = getDefaultStore()</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">customStore</span>(<span class="string">&#x27;readwrite&#x27;</span>, <span class="function"><span class="params">store</span> =&gt;</span> &#123;</span><br><span class="line">        store.<span class="title function_">clear</span>();</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_">promisifyRequest</span>(store.<span class="property">transaction</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="使用方式"><a href="#使用方式" class="headerlink" title="使用方式"></a>使用方式</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; get, set, del, clear &#125; <span class="keyword">from</span> <span class="string">&#x27;@/utils/cache&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取数据</span></span><br><span class="line"><span class="keyword">await</span> <span class="title function_">get</span>(cacheKey);</span><br><span class="line"><span class="comment">//写入数据</span></span><br><span class="line"><span class="keyword">await</span> <span class="title function_">set</span>(cacheKey, item);</span><br><span class="line"><span class="comment">//删除数据</span></span><br><span class="line"><span class="keyword">await</span> <span class="title function_">del</span>(cacheKey);</span><br><span class="line"><span class="comment">//清空存储</span></span><br><span class="line"><span class="keyword">await</span> <span class="title function_">clear</span>();</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>一个简单的uniapp音频管理工具</title>
      <link href="/%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84uniapp%E9%9F%B3%E9%A2%91%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/"/>
      <url>/%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84uniapp%E9%9F%B3%E9%A2%91%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/</url>
      
        <content type="html"><![CDATA[<h4 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h4><p>最近做一个项目需要播放各种音效，为了方便管理资源写了一个简单的小工具。</p><h4 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title class_">AudioTools</span> = &#123;</span><br><span class="line">    <span class="attr">audioInstance</span>: &#123;&#125;, <span class="comment">// 存储音频管理器实例</span></span><br><span class="line">    <span class="attr">audioSrcMap</span>: &#123;     <span class="comment">// 存储音频资源路径映射</span></span><br><span class="line">        <span class="attr">indexBgm</span>: <span class="string">&#x27;/static/sound/bgm.mp3&#x27;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="title function_">init</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">listenAudioEvent</span>();</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="title function_">load</span>(<span class="params">audioType, options = &#123;&#125;</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> audioSrc = <span class="variable language_">this</span>.<span class="property">audioSrcMap</span>[audioType];</span><br><span class="line">        <span class="keyword">if</span> (!audioSrc) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">error</span>(audioType + <span class="string">&#x27;音频资源不存在&#x27;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">let</span> audioManager = <span class="keyword">new</span> <span class="title class_">AudioManager</span>(audioSrc, options);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">audioInstance</span>[audioType] = audioManager;</span><br><span class="line">        <span class="keyword">return</span> audioManager;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="title function_">handleAudioEvent</span>(<span class="params">event</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> audioKey = event.<span class="property">audioType</span>;</span><br><span class="line">        <span class="keyword">let</span> audioManager = <span class="variable language_">this</span>.<span class="property">audioInstance</span>[audioKey];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span> (event.<span class="property">eventType</span>) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;load&quot;</span>:</span><br><span class="line">                <span class="keyword">if</span> (!audioManager) &#123;</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="title function_">load</span>(audioKey);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;play&quot;</span>:</span><br><span class="line">                <span class="keyword">if</span> (!audioManager) &#123;</span><br><span class="line">                    audioManager = <span class="variable language_">this</span>.<span class="title function_">load</span>(audioKey);</span><br><span class="line">                    <span class="keyword">if</span> (!audioManager) <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                audioManager.<span class="title function_">stop</span>();</span><br><span class="line">                audioManager.<span class="title function_">setLoop</span>(event.<span class="property">loop</span> || <span class="literal">false</span>);</span><br><span class="line">                audioManager.<span class="title function_">setVolume</span>(event.<span class="property">volume</span> || <span class="number">1</span>);</span><br><span class="line">                <span class="keyword">if</span> (event.<span class="property">startTime</span>) &#123;</span><br><span class="line">                    audioManager.<span class="title function_">seekTo</span>(event.<span class="property">startTime</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                audioManager.<span class="title function_">play</span>();</span><br><span class="line">                <span class="keyword">if</span> (event.<span class="property">stopTime</span>) &#123;</span><br><span class="line">                    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                        audioManager.<span class="title function_">stop</span>();</span><br><span class="line">                    &#125;, event.<span class="property">stopTime</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;stop&quot;</span>:</span><br><span class="line">                <span class="keyword">if</span> (audioManager) &#123;</span><br><span class="line">                    audioManager.<span class="title function_">stop</span>();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="title function_">updateAudioVolume</span>(<span class="params">volume</span>) &#123;</span><br><span class="line">        <span class="title class_">Object</span>.<span class="title function_">keys</span>(<span class="variable language_">this</span>.<span class="property">audioInstance</span>).<span class="title function_">forEach</span>(<span class="function"><span class="params">audioType</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">const</span> audioInstance = <span class="variable language_">this</span>.<span class="property">audioInstance</span>[audioType];</span><br><span class="line">            audioInstance.<span class="title function_">setVolume</span>(volume);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="title function_">listenAudioEvent</span>(<span class="params"></span>) &#123;</span><br><span class="line">        uni.$on(<span class="string">&quot;_audio_event&quot;</span>, <span class="function"><span class="params">event</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">handleAudioEvent</span>(event);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AudioManager</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">src, options = &#123;&#125;</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">audioContext</span> = uni.<span class="title function_">createInnerAudioContext</span>();</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">audioContext</span>.<span class="property">src</span> = src;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">audioContext</span>.<span class="property">autoplay</span> = options.<span class="property">autoplay</span> || <span class="literal">true</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">audioContext</span>.<span class="title function_">onError</span>(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(res);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">setVolume</span>(<span class="params">volume</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">audioContext</span>.<span class="property">volume</span> = volume;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">setLoop</span>(<span class="params">loop</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">audioContext</span>.<span class="property">loop</span> = loop;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">seekTo</span>(<span class="params">time</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">audioContext</span>.<span class="title function_">seek</span>(time);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">play</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">audioContext</span>.<span class="title function_">play</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">pause</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">audioContext</span>.<span class="title function_">pause</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">stop</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">audioContext</span>.<span class="title function_">stop</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>核心方法详解</strong></p><p>​1.<code>init</code></p><p>初始化方法，用于设置音频事件监听。</p><p>​2.<code>load(audioType, options)</code></p><p>根据 audioType 加载对应的音频文件，并生成一个 <code>AudioManager</code> 实例。通过传入 <code>options</code>，我们可以设置自动播放、音量等参数。</p><p>​3.<code>handleAudioEvent(event)</code></p><p>该方法是 AudioTools 的事件处理核心，根据不同的事件类型（如 <code>load</code> <code>play</code> <code>stop</code>）进行相应的操作。</p><p>​4.<code>updateAudioVolume(volume)</code></p><p>用于更新所有音频实例的音量设置。</p><p>​5.<code>listenAudioEvent()</code></p><p>设置监听音频事件，通过 <code>uni.$on</code> 来订阅 <code>_audio_event</code> 事件，实现音频控制与应用逻辑的解耦。</p><p><strong>使用方式</strong></p><p>在<code>main.js</code>中引入</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">AudioTools</span> <span class="keyword">from</span> <span class="string">&#x27;@/utils/AudioTools&#x27;</span></span><br><span class="line"><span class="title class_">AudioTools</span>.<span class="title function_">init</span>();</span><br></pre></td></tr></table></figure><p>然后就可以在任何地方～</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">uni.$emit(<span class="string">&quot;_audio_event&quot;</span>, &#123;</span><br><span class="line">  <span class="attr">eventType</span>: <span class="string">&quot;play&quot;</span>,</span><br><span class="line">  <span class="attr">audioType</span>: <span class="string">&quot;main_audio&quot;</span>,</span><br><span class="line">  <span class="attr">volume</span>: <span class="number">1</span>,</span><br><span class="line">  <span class="attr">loop</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">startTime</span>: <span class="number">0</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//或</span></span><br><span class="line">uni.$emit(<span class="string">&quot;_audio_event&quot;</span>, &#123;</span><br><span class="line">  <span class="attr">eventType</span>: <span class="string">&quot;stop&quot;</span>,</span><br><span class="line">  <span class="attr">audioType</span>: <span class="string">&quot;main_audio&quot;</span>,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> uniapp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>全妹爱看的乌龟对对碰背后的逻辑</title>
      <link href="/%E5%85%A8%E5%A6%B9%E7%88%B1%E7%9C%8B%E7%9A%84%E4%B9%8C%E9%BE%9F%E5%AF%B9%E5%AF%B9%E7%A2%B0%E8%83%8C%E5%90%8E%E7%9A%84%E9%80%BB%E8%BE%91/"/>
      <url>/%E5%85%A8%E5%A6%B9%E7%88%B1%E7%9C%8B%E7%9A%84%E4%B9%8C%E9%BE%9F%E5%AF%B9%E5%AF%B9%E7%A2%B0%E8%83%8C%E5%90%8E%E7%9A%84%E9%80%BB%E8%BE%91/</url>
      
        <content type="html"><![CDATA[<p>前段时间全妹在直播间玩乌龟对对碰的事让大家津津乐道，其实玩法本质就是一个九宫格棋盘类游戏。</p><h3 id="玩法"><a href="#玩法" class="headerlink" title="玩法"></a>玩法</h3><p>实际是一种盲盒销售手段，玩家花费一定金额购买对应数量的乌龟摆件，主播会根据顺序将其拆开，将其放在桌面对应位置上，按照规则清除，直到桌面上没有符合以上规则的乌龟位置，拆出来的所有小乌龟，均归玩家所有。</p><h3 id="名词解释"><a href="#名词解释" class="headerlink" title="名词解释"></a>名词解释</h3><ol><li><p>许愿</p><p>又叫幸运色，拆到玩家选择的“幸运色”</p></li><li><p>对碰</p><p>当桌面上同时出现两个颜色乌龟</p></li><li><p>三连</p><p>当桌面上有是哪个同样颜色的乌龟位列一排</p></li><li><p>清台</p><p>当桌面上所有乌龟都被清除</p></li><li><p>全家福</p><p>乌龟有10个颜色，桌面有九个格子，当九个格子中的颜色均不一致</p></li></ol><h3 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h3><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Node</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;cc&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">HallTurtle</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;../hall/HallTurtle&#x27;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">GridHandler</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="attr">_instance</span>: <span class="title class_">GridHandler</span> = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="title function_">constructor</span>(<span class="params"></span>) &#123; &#125;</span><br><span class="line">    <span class="comment">// 获取单例实例</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">get</span> <span class="title function_">instance</span>(): <span class="title class_">GridHandler</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">_instance</span> == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">_instance</span> = <span class="keyword">new</span> <span class="title class_">GridHandler</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">_instance</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//九宫格</span></span><br><span class="line">    <span class="keyword">public</span> <span class="attr">grid</span>: <span class="title class_">Node</span>[][] = [</span><br><span class="line">        [<span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>],</span><br><span class="line">        [<span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>],</span><br><span class="line">        [<span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>],</span><br><span class="line">    ];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 派发指定数量的物品到空的格子</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">dispatchItemToEmptyCells</span>(<span class="params">item: Node</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">grid</span>[i][j] === <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="property">grid</span>[i][j] = item;</span><br><span class="line">                    <span class="comment">// console.log(`格子 ($&#123;i&#125;, $&#123;j&#125;) 是空的，派发物品: $&#123;item.name&#125;`);</span></span><br><span class="line">                    <span class="keyword">return</span> [i, j];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//清空制定格子</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">clearCells</span>(<span class="params">i: <span class="built_in">number</span>, j: <span class="built_in">number</span></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">grid</span>[i][j] = <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 清空所有格子</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">clearAllCells</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">grid</span> = <span class="title class_">Array</span>(<span class="number">3</span>).<span class="title function_">fill</span>(<span class="literal">null</span>).<span class="title function_">map</span>(<span class="function">() =&gt;</span> <span class="title class_">Array</span>(<span class="number">3</span>).<span class="title function_">fill</span>(<span class="literal">null</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 检查网格中是否有两个相同的物品（对碰）</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">hasTwoSameItems</span>(): <span class="title class_">Node</span>[] &#123;</span><br><span class="line">        <span class="keyword">let</span> grid = <span class="variable language_">this</span>.<span class="property">grid</span></span><br><span class="line">        <span class="comment">// 用一个Map来存储每个物品</span></span><br><span class="line">        <span class="keyword">const</span> itemMap = <span class="keyword">new</span> <span class="title class_">Map</span>&lt;<span class="built_in">number</span>, <span class="title class_">Node</span>&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++) &#123;</span><br><span class="line">                <span class="keyword">const</span> item = grid[i][j];</span><br><span class="line">                <span class="keyword">if</span> (item !== <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">let</span> turtleColorID = item.<span class="title function_">getComponent</span>(<span class="title class_">HallTurtle</span>).<span class="property">turtleColorID</span></span><br><span class="line">                    <span class="comment">// 如果这个物品已经存在于Map中</span></span><br><span class="line">                    <span class="keyword">if</span> (itemMap.<span class="title function_">has</span>(turtleColorID)) &#123;</span><br><span class="line">                        <span class="keyword">return</span> [itemMap.<span class="title function_">get</span>(turtleColorID), item]</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        itemMap.<span class="title function_">set</span>(turtleColorID, item);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> []; <span class="comment">// 没有找到两个相同的物品</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 检查网格中是否有指定颜色的物品（幸运色）</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">hasSpecifiedItem</span>(<span class="attr">luckyColorID</span>: <span class="built_in">number</span>): <span class="title class_">Node</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> grid = <span class="variable language_">this</span>.<span class="property">grid</span></span><br><span class="line">        <span class="comment">// 遍历整个九宫格</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++) &#123;</span><br><span class="line">                <span class="keyword">const</span> item = grid[i][j]</span><br><span class="line">                <span class="keyword">if</span> (item &amp;&amp; item.<span class="title function_">getComponent</span>(<span class="title class_">HallTurtle</span>).<span class="property">turtleColorID</span> === luckyColorID) &#123;</span><br><span class="line">                    <span class="keyword">return</span> item; <span class="comment">// 找到指定的物品</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>; <span class="comment">// 没有找到指定的物品</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 检查是否有三连</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">checkThreeInARow</span>(): <span class="title class_">Node</span>[] &#123;</span><br><span class="line">        <span class="keyword">let</span> grid = <span class="variable language_">this</span>.<span class="property">grid</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 定义一个检查三连的辅助函数</span></span><br><span class="line">        <span class="keyword">const</span> isThreeInARow = (<span class="attr">nodes</span>: <span class="title class_">Node</span>[]): <span class="function"><span class="params">boolean</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> nodes.<span class="title function_">every</span>(<span class="function"><span class="params">node</span> =&gt;</span> node &amp;&amp; node.<span class="title function_">getComponent</span>(<span class="title class_">HallTurtle</span>).<span class="property">turtleColorID</span> === nodes[<span class="number">0</span>].<span class="title function_">getComponent</span>(<span class="title class_">HallTurtle</span>).<span class="property">turtleColorID</span>);</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 检查每一行</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">let</span> row = [grid[i][<span class="number">0</span>], grid[i][<span class="number">1</span>], grid[i][<span class="number">2</span>]];</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_">isThreeInARow</span>(row)) &#123;</span><br><span class="line">                <span class="keyword">return</span> row;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 检查每一列</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">let</span> col = [grid[<span class="number">0</span>][i], grid[<span class="number">1</span>][i], grid[<span class="number">2</span>][i]];</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_">isThreeInARow</span>(col)) &#123;</span><br><span class="line">                <span class="keyword">return</span> col;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 检查对角线 (从左上到右下)</span></span><br><span class="line">        <span class="keyword">let</span> leftDiagonal = [grid[<span class="number">0</span>][<span class="number">0</span>], grid[<span class="number">1</span>][<span class="number">1</span>], grid[<span class="number">2</span>][<span class="number">2</span>]];</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_">isThreeInARow</span>(leftDiagonal)) &#123;</span><br><span class="line">            <span class="keyword">return</span> leftDiagonal;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 检查对角线 (从右上到左下)</span></span><br><span class="line">        <span class="keyword">let</span> rightDiagonal = [grid[<span class="number">0</span>][<span class="number">2</span>], grid[<span class="number">1</span>][<span class="number">1</span>], grid[<span class="number">2</span>][<span class="number">0</span>]];</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_">isThreeInARow</span>(rightDiagonal)) &#123;</span><br><span class="line">            <span class="keyword">return</span> rightDiagonal;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 如果没有三连，返回空数组</span></span><br><span class="line">        <span class="keyword">return</span> [];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//检查是否有清台</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">areAllCellsEmpty</span>(): <span class="built_in">boolean</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> grid = <span class="variable language_">this</span>.<span class="property">grid</span></span><br><span class="line">        <span class="comment">// 遍历整个九宫格</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++) &#123;</span><br><span class="line">                <span class="comment">// 如果有任意一个格子不是空的，返回 false</span></span><br><span class="line">                <span class="keyword">if</span> (grid[i][j] !== <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 如果所有格子都为空，返回 true</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 检查是否所有物品都不同（全家福）</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">hasFamily</span>(): <span class="title class_">Node</span>[] &#123;</span><br><span class="line">        <span class="keyword">let</span> grid = <span class="variable language_">this</span>.<span class="property">grid</span>;</span><br><span class="line">        <span class="keyword">const</span> itemMap = <span class="keyword">new</span> <span class="title class_">Map</span>&lt;<span class="built_in">number</span>, <span class="title class_">Node</span>&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++) &#123;</span><br><span class="line">                <span class="keyword">const</span> item = grid[i][j];</span><br><span class="line">                <span class="keyword">if</span> (!item) &#123;</span><br><span class="line">                    <span class="keyword">return</span> [];</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">let</span> turtleColorID = item.<span class="title function_">getComponent</span>(<span class="title class_">HallTurtle</span>).<span class="property">turtleColorID</span>;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 如果这个颜色ID已经存在于Map中，返回空数组</span></span><br><span class="line">                <span class="keyword">if</span> (itemMap.<span class="title function_">has</span>(turtleColorID)) &#123;</span><br><span class="line">                    <span class="keyword">return</span> [];</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                itemMap.<span class="title function_">set</span>(turtleColorID, item);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">Array</span>.<span class="title function_">from</span>(itemMap.<span class="title function_">values</span>());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//计算网格中空格的数量</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">countEmptyCells</span>(): <span class="built_in">number</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> emptyCount = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">// 遍历整个网格</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">grid</span>[i][j] === <span class="literal">null</span>) &#123;</span><br><span class="line">                    emptyCount++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> emptyCount;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Cocos Creator音频播放管理器</title>
      <link href="/Cocos-Creator%E9%9F%B3%E9%A2%91%E6%92%AD%E6%94%BE%E7%AE%A1%E7%90%86%E5%99%A8/"/>
      <url>/Cocos-Creator%E9%9F%B3%E9%A2%91%E6%92%AD%E6%94%BE%E7%AE%A1%E7%90%86%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<blockquote><p>由于 Cocos Creator 3.x 移除了 v2.x <code>cc.audioEngine</code> 系列的 API，统一使用 AudioSource 控制音频播放。</p></blockquote><p>根据cocos官网给的例子按自己实际使用修改的一个小工具🔧</p><p>先看官网给的例子，官方现在推荐使用的是<code>audioSource</code>, 播放音乐用 <code>play</code>, 播放音效用 <code>playOneShot</code>。但是一个<code>audioSource</code>只能同时操作单个音频，所以当我们有多个音频需要同时播放时就需要做一些“加工”了。</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//AudioMgr.ts</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Node</span>, <span class="title class_">AudioSource</span>, <span class="title class_">AudioClip</span>, resources, director &#125; <span class="keyword">from</span> <span class="string">&#x27;cc&#x27;</span>;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@en</span></span></span><br><span class="line"><span class="comment"> * this is a sington class for audio play, can be easily called from anywhere in you project.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@zh</span></span></span><br><span class="line"><span class="comment"> * 这是一个用于播放音频的单件类，可以很方便地在项目的任何地方调用。</span></span><br><span class="line"><span class="comment"> */</span> </span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">AudioMgr</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="attr">_inst</span>: <span class="title class_">AudioMgr</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">get</span> <span class="title function_">inst</span>(): <span class="title class_">AudioMgr</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">_inst</span> == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">_inst</span> = <span class="keyword">new</span> <span class="title class_">AudioMgr</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">_inst</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="attr">_audioSource</span>: <span class="title class_">AudioSource</span>;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="comment">//@en create a node as audioMgr</span></span><br><span class="line">        <span class="comment">//@zh 创建一个节点作为 audioMgr</span></span><br><span class="line">        <span class="keyword">let</span> audioMgr = <span class="keyword">new</span> <span class="title class_">Node</span>();</span><br><span class="line">        audioMgr.<span class="property">name</span> = <span class="string">&#x27;__audioMgr__&#x27;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//@en add to the scene.</span></span><br><span class="line">        <span class="comment">//@zh 添加节点到场景</span></span><br><span class="line">        director.<span class="title function_">getScene</span>().<span class="title function_">addChild</span>(audioMgr);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//@en make it as a persistent node, so it won&#x27;t be destroied when scene change.</span></span><br><span class="line">        <span class="comment">//@zh 标记为常驻节点，这样场景切换的时候就不会被销毁了</span></span><br><span class="line">        director.<span class="title function_">addPersistRootNode</span>(audioMgr);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//@en add AudioSource componrnt to play audios.</span></span><br><span class="line">        <span class="comment">//@zh 添加 AudioSource 组件，用于播放音频。</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">_audioSource</span> = audioMgr.<span class="title function_">addComponent</span>(<span class="title class_">AudioSource</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">get</span> <span class="title function_">audioSource</span>() &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">_audioSource</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@en</span></span></span><br><span class="line"><span class="comment">     * play short audio, such as strikes,explosions</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@zh</span></span></span><br><span class="line"><span class="comment">     * 播放短音频,比如 打击音效，爆炸音效等</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sound clip or url for the audio</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> volume </span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="title function_">playOneShot</span>(<span class="params">sound: AudioClip | <span class="built_in">string</span>, volume: <span class="built_in">number</span> = <span class="number">1.0</span></span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (sound <span class="keyword">instanceof</span> <span class="title class_">AudioClip</span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">_audioSource</span>.<span class="title function_">playOneShot</span>(sound, volume);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            resources.<span class="title function_">load</span>(sound, <span class="function">(<span class="params">err, clip: AudioClip</span>) =&gt;</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (err) &#123;</span><br><span class="line">                    <span class="variable language_">console</span>.<span class="title function_">log</span>(err);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="property">_audioSource</span>.<span class="title function_">playOneShot</span>(clip, volume);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@en</span></span></span><br><span class="line"><span class="comment">     * play long audio, such as the bg music</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@zh</span></span></span><br><span class="line"><span class="comment">     * 播放长音频，比如 背景音乐</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sound clip or url for the sound</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> volume </span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="title function_">play</span>(<span class="params">sound: AudioClip | <span class="built_in">string</span>, volume: <span class="built_in">number</span> = <span class="number">1.0</span></span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (sound <span class="keyword">instanceof</span> <span class="title class_">AudioClip</span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">_audioSource</span>.<span class="title function_">stop</span>();</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">_audioSource</span>.<span class="property">clip</span> = sound;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">_audioSource</span>.<span class="title function_">play</span>();</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">audioSource</span>.<span class="property">volume</span> = volume;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            resources.<span class="title function_">load</span>(sound, <span class="function">(<span class="params">err, clip: AudioClip</span>) =&gt;</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (err) &#123;</span><br><span class="line">                    <span class="variable language_">console</span>.<span class="title function_">log</span>(err);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="property">_audioSource</span>.<span class="title function_">stop</span>();</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="property">_audioSource</span>.<span class="property">clip</span> = clip;</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="property">_audioSource</span>.<span class="title function_">play</span>();</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="property">audioSource</span>.<span class="property">volume</span> = volume;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * stop the audio play</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="title function_">stop</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">_audioSource</span>.<span class="title function_">stop</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * pause the audio play</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="title function_">pause</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">_audioSource</span>.<span class="title function_">pause</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * resume the audio play</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="title function_">resume</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">_audioSource</span>.<span class="title function_">play</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>那么我们需要做哪些改动呢？其实也很简单，就是一个音频对应一个<code>audioSource</code>，这里我用<code>Map</code>存储了音效组件<code>AudioSource</code>。</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 一个音频对应一个audioSource</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">private</span> <span class="attr">effectList</span>: <span class="title class_">Map</span>&lt;<span class="built_in">string</span>, <span class="title class_">AudioSource</span>&gt; = <span class="keyword">new</span> <span class="title class_">Map</span>();</span><br></pre></td></tr></table></figure><p>接下来在播放音频时，如果是第一次播放那就创建一个节点用来控制该音频，同时添加<code>AudioSource</code>组件到节点，然后把加载好的音频<code>Clip</code>绑定到<code>AudioSource</code>组件上，最后就是往<code>effectList</code>里<code>set</code>新创建的音频组件。这样一顿操作，第二次播放时就可以直接复用已经存在的组件了，节省了系统开销。</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="title function_">playEffect</span>(<span class="params">sound: <span class="built_in">string</span>, volume: <span class="built_in">number</span> = <span class="number">1.0</span></span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> <span class="attr">audioSource</span>: <span class="title class_">AudioSource</span> | <span class="literal">undefined</span> = <span class="variable language_">this</span>.<span class="property">effectList</span>.<span class="title function_">get</span>(sound);</span><br><span class="line">    <span class="keyword">if</span> (!audioSource) &#123;</span><br><span class="line">        <span class="keyword">const</span> audioClip = <span class="keyword">await</span> <span class="title class_">BundleManager</span>.<span class="title function_">get</span>().<span class="title function_">loadAudio</span>(sound);</span><br><span class="line">        <span class="keyword">if</span> (!audioClip) <span class="keyword">return</span>;  <span class="comment">// 如果加载音频失败，则提前返回</span></span><br><span class="line">        <span class="keyword">const</span> audioNode = <span class="keyword">new</span> <span class="title class_">Node</span>();</span><br><span class="line">        audioNode.<span class="property">name</span> = sound;</span><br><span class="line">        audioNode.<span class="property">parent</span> = <span class="variable language_">this</span>.<span class="property">audioMgr</span>;</span><br><span class="line">        audioSource = audioNode.<span class="title function_">addComponent</span>(<span class="title class_">AudioSource</span>);</span><br><span class="line">        audioSource.<span class="property">name</span> = sound;</span><br><span class="line">        audioSource.<span class="property">clip</span> = audioClip;</span><br><span class="line">        audioSource.<span class="property">volume</span> = volume;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">effectList</span>.<span class="title function_">set</span>(sound, audioSource);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (audioSource.<span class="property">clip</span>) &#123;</span><br><span class="line">        <span class="comment">//播放短音效使用playOneShot</span></span><br><span class="line">        audioSource.<span class="title function_">playOneShot</span>(audioSource.<span class="property">clip</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>那么长音频该怎么处理呢？</p><p>我这里以背景音乐举例，首先定义一个属性😂</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 背景音</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="attr">bgMusic</span>: <span class="title class_">AudioSource</span></span><br></pre></td></tr></table></figure><p>很简单，直接看代码</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="title function_">playMusic</span>(<span class="params">sound: <span class="built_in">string</span>, loop: <span class="built_in">boolean</span> = <span class="literal">true</span>, volume: <span class="built_in">number</span> = <span class="number">1.0</span></span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="variable language_">this</span>.<span class="property">bgMusic</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> audioClip = <span class="keyword">await</span> <span class="title class_">BundleManager</span>.<span class="title function_">get</span>().<span class="title function_">loadAudio</span>(sound);</span><br><span class="line">        <span class="keyword">if</span> (!audioClip) <span class="keyword">return</span>;  <span class="comment">// 如果加载音频失败，则提前返回</span></span><br><span class="line">        <span class="keyword">const</span> audioNode = <span class="keyword">new</span> <span class="title class_">Node</span>();</span><br><span class="line">        audioNode.<span class="property">name</span> = sound;</span><br><span class="line">        audioNode.<span class="property">parent</span> = <span class="variable language_">this</span>.<span class="property">audioMgr</span>;</span><br><span class="line">        <span class="keyword">const</span> audioSource = audioNode.<span class="title function_">addComponent</span>(<span class="title class_">AudioSource</span>);</span><br><span class="line">        audioSource.<span class="property">name</span> = sound;</span><br><span class="line">        audioSource.<span class="property">clip</span> = audioClip;</span><br><span class="line">        audioSource.<span class="property">volume</span> = volume;</span><br><span class="line">        audioSource.<span class="property">loop</span> = loop;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">bgMusic</span> = audioSource</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">bgMusic</span>.<span class="property">clip</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">bgMusic</span>.<span class="title function_">play</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后完整代码奉上</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Node</span>, <span class="title class_">AudioSource</span>, director &#125; <span class="keyword">from</span> <span class="string">&#x27;cc&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">BundleManager</span> <span class="keyword">from</span> <span class="string">&#x27;../bundle/BundleManager&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">AudioManager</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="attr">_inst</span>: <span class="title class_">AudioManager</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">get</span> <span class="title function_">inst</span>(): <span class="title class_">AudioManager</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">_inst</span> == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">_inst</span> = <span class="keyword">new</span> <span class="title class_">AudioManager</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">_inst</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 音频root节点</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="attr">audioMgr</span>: <span class="title class_">Node</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 一个音频对应一个audioSource</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="attr">effectList</span>: <span class="title class_">Map</span>&lt;<span class="built_in">string</span>, <span class="title class_">AudioSource</span>&gt; = <span class="keyword">new</span> <span class="title class_">Map</span>();</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 背景音</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="attr">bgMusic</span>: <span class="title class_">AudioSource</span></span><br><span class="line"></span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">audioMgr</span> = <span class="keyword">new</span> <span class="title class_">Node</span>();</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">audioMgr</span>.<span class="property">name</span> = <span class="string">&#x27;__audioMgr__&#x27;</span>;</span><br><span class="line">        director.<span class="title function_">getScene</span>().<span class="title function_">addChild</span>(<span class="variable language_">this</span>.<span class="property">audioMgr</span>);</span><br><span class="line">        director.<span class="title function_">addPersistRootNode</span>(<span class="variable language_">this</span>.<span class="property">audioMgr</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">playEffect</span>(<span class="params">sound: <span class="built_in">string</span>, volume: <span class="built_in">number</span> = <span class="number">1.0</span></span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> <span class="attr">audioSource</span>: <span class="title class_">AudioSource</span> | <span class="literal">undefined</span> = <span class="variable language_">this</span>.<span class="property">effectList</span>.<span class="title function_">get</span>(sound);</span><br><span class="line">        <span class="keyword">if</span> (!audioSource) &#123;</span><br><span class="line">            <span class="keyword">const</span> audioClip = <span class="keyword">await</span> <span class="title class_">BundleManager</span>.<span class="title function_">get</span>().<span class="title function_">loadAudio</span>(sound);</span><br><span class="line">            <span class="keyword">if</span> (!audioClip) <span class="keyword">return</span>;  <span class="comment">// 如果加载音频失败，则提前返回</span></span><br><span class="line">            <span class="keyword">const</span> audioNode = <span class="keyword">new</span> <span class="title class_">Node</span>();</span><br><span class="line">            audioNode.<span class="property">name</span> = sound;</span><br><span class="line">            audioNode.<span class="property">parent</span> = <span class="variable language_">this</span>.<span class="property">audioMgr</span>;</span><br><span class="line">            audioSource = audioNode.<span class="title function_">addComponent</span>(<span class="title class_">AudioSource</span>);</span><br><span class="line">            audioSource.<span class="property">name</span> = sound;</span><br><span class="line">            audioSource.<span class="property">clip</span> = audioClip;</span><br><span class="line">            audioSource.<span class="property">volume</span> = volume;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">effectList</span>.<span class="title function_">set</span>(sound, audioSource);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (audioSource.<span class="property">clip</span>) &#123;</span><br><span class="line">            audioSource.<span class="title function_">play</span>();</span><br><span class="line">            <span class="comment">// audioSource.playOneShot(audioSource.clip);</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">playMusic</span>(<span class="params">sound: <span class="built_in">string</span>, loop: <span class="built_in">boolean</span> = <span class="literal">true</span>, volume: <span class="built_in">number</span> = <span class="number">1.0</span></span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="variable language_">this</span>.<span class="property">bgMusic</span>) &#123;</span><br><span class="line">            <span class="keyword">const</span> audioClip = <span class="keyword">await</span> <span class="title class_">BundleManager</span>.<span class="title function_">get</span>().<span class="title function_">loadAudio</span>(sound);</span><br><span class="line">            <span class="keyword">if</span> (!audioClip) <span class="keyword">return</span>;  <span class="comment">// 如果加载音频失败，则提前返回</span></span><br><span class="line">            <span class="keyword">const</span> audioNode = <span class="keyword">new</span> <span class="title class_">Node</span>();</span><br><span class="line">            audioNode.<span class="property">name</span> = sound;</span><br><span class="line">            audioNode.<span class="property">parent</span> = <span class="variable language_">this</span>.<span class="property">audioMgr</span>;</span><br><span class="line">            <span class="keyword">const</span> audioSource = audioNode.<span class="title function_">addComponent</span>(<span class="title class_">AudioSource</span>);</span><br><span class="line">            audioSource.<span class="property">name</span> = sound;</span><br><span class="line">            audioSource.<span class="property">clip</span> = audioClip;</span><br><span class="line">            audioSource.<span class="property">volume</span> = volume;</span><br><span class="line">            audioSource.<span class="property">loop</span> = loop;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">bgMusic</span> = audioSource</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">bgMusic</span>.<span class="property">clip</span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">bgMusic</span>.<span class="title function_">play</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">stopMusic</span>(): <span class="built_in">void</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="variable language_">this</span>.<span class="property">bgMusic</span> || !<span class="variable language_">this</span>.<span class="property">bgMusic</span>.<span class="property">playing</span>) <span class="keyword">return</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">bgMusic</span>.<span class="title function_">stop</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">stopEffect</span>(<span class="attr">sound</span>: <span class="built_in">string</span>): <span class="built_in">void</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> <span class="attr">audioSource</span>: <span class="title class_">AudioSource</span> | <span class="literal">undefined</span> = <span class="variable language_">this</span>.<span class="property">effectList</span>.<span class="title function_">get</span>(sound);</span><br><span class="line">        <span class="keyword">if</span> (!audioSource || !audioSource.<span class="property">playing</span>) <span class="keyword">return</span>;</span><br><span class="line">        audioSource.<span class="title function_">stop</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> cocos </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP使用Redis实现分布式锁</title>
      <link href="/PHP%E4%BD%BF%E7%94%A8-Redis-%E5%AE%9E%E7%8E%B0%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/"/>
      <url>/PHP%E4%BD%BF%E7%94%A8-Redis-%E5%AE%9E%E7%8E%B0%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/</url>
      
        <content type="html"><![CDATA[<h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>在分布式系统中，分布式锁是确保资源互斥访问的重要机制。我们在系统中修改已有数据时，需要先读取，然后进行修改保存，此时很容易遇到并发问题。由于修改和保存不是原子操作，在并发场景下，部分对数据的操作可能会丢失。在单服务器系统我们常用本地锁来避免并发带来的问题，然而，当服务采用集群方式部署时，本地锁无法在多个服务器之间生效，这时候保证数据的一致性就需要分布式锁来实现。</p><h3 id="实现方式"><a href="#实现方式" class="headerlink" title="实现方式"></a>实现方式</h3><p>通过 Redis 的 <code>SET</code> 和 <code>DEL</code> 命令实现锁的设置和释放，并使用 Lua 脚本确保操作的原子性。</p><ul><li><p>加锁命令：<code>SETNX key value</code>，当键不存在时，对键进行设置操作并返回成功，否则返回失败。KEY 是锁的唯一标识，一般按业务来决定命名。</p></li><li><p>解锁命令：<code>DEL key</code>，通过删除键值对释放锁，以便其他线程可以通过 SETNX 命令来获取锁。</p></li><li><p>锁超时：<code>EXPIRE key timeout</code>, 设置 key 的超时时间，以保证即使锁没有被显式释放，锁也可以在一定时间后自动释放，避免资源被永远锁住。</p></li></ul><p>以下是详细的代码分析：</p><h3 id="获取锁"><a href="#获取锁" class="headerlink" title="获取锁"></a>获取锁</h3><p><code>getLock</code> 方法尝试获取锁。它使用 Redis 的 <code>SET</code> 命令，并通过 Lua 脚本确保操作的原子性。关键点如下：</p><ul><li><strong>锁超时</strong>：设置 key 的超时时间，以保证即使锁没有被显式释放，锁也可以在一定时间后自动释放，避免资源被永远锁住。</li><li><strong>唯一值生成</strong>：使用 <code>md5(uniqid(&#39;&#39;, true))</code> 生成唯一的锁值，在后面释放锁时需要用到。</li><li><strong>原子性</strong>：<code>SET</code> 命令结合 <code>NX</code> 和 <code>EX</code> 选项确保锁的唯一性和过期时间。Lua 脚本避免了多命令操作的并发问题。</li><li><strong>重试机制</strong>：如果锁获取失败，方法会自旋重试，直到达到最大重试次数。每次重试之间，线程会等待 200 毫秒。</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 获取锁，支持自旋</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span>  string  $lockKey</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span>  int     $ttl           过期时间</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span>  int     $max_attempts  最大重试次数</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@return</span> string|null</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getLock</span>(<span class="params"><span class="keyword">string</span> <span class="variable">$lockKey</span>, <span class="keyword">int</span> <span class="variable">$ttl</span> = <span class="number">20</span>, <span class="keyword">int</span> <span class="variable">$max_attempts</span> = <span class="number">10</span></span>): ?<span class="title">string</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="variable">$key</span> = <span class="built_in">self</span>::<span class="variable constant_">LOCK_PREFIX</span>.<span class="variable">$lockKey</span>;</span><br><span class="line">  <span class="variable">$uniqueValue</span> = <span class="title function_ invoke__">md5</span>(<span class="title function_ invoke__">uniqid</span>(<span class="string">&#x27;&#x27;</span>, <span class="literal">true</span>)); <span class="comment">// 生成唯一的锁值</span></span><br><span class="line">  <span class="variable">$attempts</span> = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span> (<span class="variable">$attempts</span> &lt; <span class="variable">$max_attempts</span>) &#123;</span><br><span class="line">    <span class="variable">$luaScript</span> = <span class="string">&lt;&lt;&lt;SCRIPT</span></span><br><span class="line"><span class="string">            if redis.call(&#x27;SET&#x27;, KEYS[1], ARGV[1], &#x27;NX&#x27;, &#x27;EX&#x27;, ARGV[2]) then</span></span><br><span class="line"><span class="string">                return true</span></span><br><span class="line"><span class="string">            else</span></span><br><span class="line"><span class="string">                return false</span></span><br><span class="line"><span class="string">            end</span></span><br><span class="line"><span class="string">SCRIPT</span>;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$result</span> = <span class="title class_">Redis</span>::<span class="keyword">eval</span>(<span class="variable">$luaScript</span>, <span class="number">1</span>, <span class="variable">$key</span>, <span class="variable">$uniqueValue</span>, <span class="variable">$ttl</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$result</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="variable">$uniqueValue</span>; <span class="comment">// 成功获取锁</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_ invoke__">usleep</span>(<span class="number">200</span> * <span class="number">1000</span>); <span class="comment">// 等待一段时间（微秒）</span></span><br><span class="line">    <span class="variable">$attempts</span>++;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="literal">null</span>; <span class="comment">// 达到最大重试次数后仍未获取到锁</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="释放锁"><a href="#释放锁" class="headerlink" title="释放锁"></a>释放锁</h3><p><code>releaseLock</code> 方法用于释放锁。它通过 Lua 脚本实现，确保只有持有锁的客户端才能释放锁。关键点如下：</p><ul><li><strong>锁误解除</strong>：如果线程 A 成功获取到了锁，并且设置了过期时间 30 秒，但线程 A 执行时间超过了 30 秒，锁过期自动释放，此时线程 B 获取到了锁；随后 A 执行完成，线程 A 使用 DEL 命令来释放锁，但此时线程 B 加的锁还没有执行完成，线程 A 实际释放的线程 B 加的锁。所以我们要获取当前锁的值并检查是否与传入的 <code>lockValue</code> 匹配。如果匹配，则执行 <code>DEL</code> 命令释放锁。这样可以防止误删其他客户端持有的锁。</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">releaseLock</span>(<span class="params"><span class="keyword">string</span> <span class="variable">$lockKey</span>, <span class="keyword">string</span> <span class="variable">$lockValue</span></span>): <span class="title">bool</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="variable">$key</span> = <span class="built_in">self</span>::<span class="variable constant_">LOCK_PREFIX</span>.<span class="variable">$lockKey</span>;</span><br><span class="line"></span><br><span class="line">  <span class="variable">$luaScript</span> = <span class="string">&lt;&lt;&lt;SCRIPT</span></span><br><span class="line"><span class="string">        if redis.call(&#x27;GET&#x27;, KEYS[1]) == ARGV[1] then</span></span><br><span class="line"><span class="string">            return redis.call(&#x27;DEL&#x27;, KEYS[1])</span></span><br><span class="line"><span class="string">        else</span></span><br><span class="line"><span class="string">            return 0</span></span><br><span class="line"><span class="string">        end</span></span><br><span class="line"><span class="string">SCRIPT</span>;</span><br><span class="line"></span><br><span class="line">  <span class="variable">$result</span> = <span class="title class_">Redis</span>::<span class="keyword">eval</span>(<span class="variable">$luaScript</span>, <span class="number">1</span>, <span class="variable">$key</span>, <span class="variable">$lockValue</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="variable">$result</span> === <span class="number">1</span>; <span class="comment">// 返回布尔值，表示是否成功释放锁</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>获取了锁之后一定要释放锁，所以用try  finally的错误捕获方法保证不管在获取锁之后是否发生错误，最后都会释放锁，这是安全使用锁的一种姿势。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$lockKey</span> = <span class="string">&#x27;xxx&#x27;</span>;<span class="comment">//业务key</span></span><br><span class="line"><span class="variable">$lockValue</span> = <span class="title class_">RedisLockService</span>::<span class="title function_ invoke__">getInstance</span>()-&gt;<span class="title function_ invoke__">getLock</span>(<span class="variable">$lockKey</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="variable">$lockValue</span>) &#123;</span><br><span class="line">    <span class="comment">//没有拿到key</span></span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">// 拿到锁后处理业务</span></span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">    <span class="comment">// 释放锁</span></span><br><span class="line">    <span class="title class_">RedisLockService</span>::<span class="title function_ invoke__">getInstance</span>()-&gt;<span class="title function_ invoke__">releaseLock</span>(<span class="variable">$lockKey</span>, <span class="variable">$lockValue</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Enjoy it</p>]]></content>
      
      
      
        <tags>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Cocos Creator 构建高效的数据驱动事件系统</title>
      <link href="/Cocos-Creator-%E6%9E%84%E5%BB%BA%E9%AB%98%E6%95%88%E7%9A%84%E6%95%B0%E6%8D%AE%E9%A9%B1%E5%8A%A8%E4%BA%8B%E4%BB%B6%E7%B3%BB%E7%BB%9F/"/>
      <url>/Cocos-Creator-%E6%9E%84%E5%BB%BA%E9%AB%98%E6%95%88%E7%9A%84%E6%95%B0%E6%8D%AE%E9%A9%B1%E5%8A%A8%E4%BA%8B%E4%BB%B6%E7%B3%BB%E7%BB%9F/</url>
      
        <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>在游戏开发中，常常需要处理复杂的数据交互和事件响应，尤其是在组件化的环境中。为了实现这种需求，我们需要一个高效的事件调度系统来处理数据变化和节点状态。Cocos Creator 作为一个流行的游戏引擎，提供了丰富的组件系统和事件机制，但开发者有时需要自定义更灵活的解决方案。</p><h2 id="StData-模块"><a href="#StData-模块" class="headerlink" title="StData 模块"></a><code>StData</code> 模块</h2><p><code>StData</code> 模块负责数据的存取、监听以及清理操作。它使用了一种基于路径的存储方式来管理数据，并通过事件调度器来处理数据变化的通知。</p><ul><li><strong>获取数据</strong>：<code>get(path: string, dv?: any)</code><ul><li>根据路径从缓存中获取数据，如果路径不存在则返回默认值。</li></ul></li><li><strong>设置数据</strong>：<code>set&lt;T&gt;(path: string, v: T, ignoreEvent?: boolean)</code><ul><li>根据路径设置数据，并可选择是否触发事件。</li></ul></li><li><strong>监听数据变化</strong>: <code>listen(path, node, func)</code><ul><li>监听数据的变化，并在数据改变时调用指定的回调函数。</li></ul></li><li><strong>取消监听</strong>：<code>unlisten(path, node)</code><ul><li>取消对某个数据路径的监听。</li></ul></li><li><strong>清除数据</strong>：<code>clear()</code><ul><li>清空所有缓存的数据</li></ul></li></ul><h2 id="Datar-模块"><a href="#Datar-模块" class="headerlink" title="Datar 模块"></a><code>Datar</code> 模块</h2><p><code>Datar</code> 命名空间封装了对 <code>StData</code> 模块的操作，提供了一些便捷的接口来简化数据管理工作。它的功能包括：</p><ul><li><strong>获取数据</strong>：<code>get&lt;T extends keyof DatarList&gt;(key: T): DatarList[T]</code></li><li><strong>设置数据</strong>：<code>set&lt;T extends keyof DatarList&gt;(key: T, value: DatarList[T]): void</code></li><li><strong>监听数据</strong>：<code>listen&lt;T extends keyof DatarList&gt;(key: T, node: Node, call: (value: DatarList[T]) =&gt; void): void</code></li><li><strong>取消监听</strong>：<code>unlisten&lt;T extends keyof DatarList&gt;(key: T, node: Node): void</code></li><li><strong>监听数据</strong>：<code>listenget&lt;T extends keyof DatarList&gt;(key: T, dv: any, node: Node, call: (value: DatarList[T]) =&gt; void): void</code><ul><li>相比<code>listen</code>有以下特点<ul><li>除了设置监听器，还会立即获取当前数据的值，并将其作为参数传递给回调函数</li><li>如果路径不存在，使用提供的默认值 <code>dv</code></li><li>适合于需要在注册监听的同时获取数据当前值的场景，比如在初始化时需要先展示当前数据，然后再处理后续的变化</li></ul></li></ul></li></ul><p>示例</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Datar</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./Datar&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Node</span> &#125; <span class="keyword">from</span> <span class="string">&quot;cc&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置数据</span></span><br><span class="line"><span class="title class_">Datar</span>.<span class="title function_">set</span>(<span class="string">&quot;game/selectroom&quot;</span>, <span class="string">&quot;room2&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取数据</span></span><br><span class="line"><span class="keyword">const</span> room = <span class="title class_">Datar</span>.<span class="title function_">get</span>(<span class="string">&quot;game/selectroom&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 监听数据变化</span></span><br><span class="line"><span class="title class_">Datar</span>.<span class="title function_">listen</span>(<span class="string">&quot;game/selectroom&quot;</span>, someNode, <span class="function">(<span class="params">value</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Room changed to:&quot;</span>, value);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 监听数据变化</span></span><br><span class="line"><span class="title class_">Datar</span>.<span class="title function_">listenget</span>(<span class="string">&quot;game/selectroom&quot;</span>, <span class="string">&#x27;default_value&#x27;</span>, <span class="variable language_">this</span>.<span class="property">node</span>, <span class="function">(<span class="params">gameInfo</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;gameInfo=&gt;&#x27;</span>, gameInfo);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="stEventDispatcher-模块"><a href="#stEventDispatcher-模块" class="headerlink" title="stEventDispatcher 模块"></a><code>stEventDispatcher</code> 模块</h2><p><code>stEventDispatcher</code> 类是事件调度系统的核心，负责管理事件的绑定、派发以及清理。它支持节点之间的事件传递，并在节点销毁时自动清理相关事件。</p><ul><li><p><strong>添加事件监听</strong>： <code>listen(eventName: string, func: EventFunc)</code></p><ul><li>注册一个事件监听函数。</li></ul></li><li><p><strong>移除事件监听</strong>：<code>removeEventFuncs(eventName: string)</code></p><ul><li>移除指定事件的所有监听函数。</li></ul></li><li><p><strong>分发事件</strong>： <code>dispatch(eventName: string, ...datas)</code></p><ul><li>分发事件给所有注册的监听函数。</li></ul></li><li><p><strong>管理子事件调度器</strong>：<br><code>addChild(disp: stEventDispatcher)</code>和 <code>removeChild(disp:stEventDispatcher)</code></p><ul><li>添加和移除子事件调度器，以支持复杂的事件结构。</li></ul></li></ul><h2 id="DestroyOb-模块"><a href="#DestroyOb-模块" class="headerlink" title="DestroyOb 模块"></a><code>DestroyOb</code> 模块</h2><p><code>DestroyOb</code> 组件用于管理 Cocos Creator 节点的生命周期，确保在节点销毁时清理相关资源和事件监听器。</p><ul><li><p><strong>获取组件实例</strong>：<code>getCom(node: Node): DestroyOb</code></p><ul><li>获取指定节点上的 <code>DestroyOb</code> 组件实例，如果不存在则添加一个新的。</li></ul></li><li><p><strong>监听销毁事件</strong>：<code>listen(func: Function, node?: Node)</code></p><ul><li>注册一个回调函数，以在节点销毁时触发。</li></ul></li></ul><h2 id="获取源码"><a href="#获取源码" class="headerlink" title="获取源码"></a>获取源码</h2><p><strong>Datar.ts</strong></p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">StData</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./StData&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Node</span> &#125; <span class="keyword">from</span> <span class="string">&quot;cc&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">namespace</span> <span class="title class_">Datar</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">export</span> <span class="keyword">function</span> get&lt;T <span class="keyword">extends</span> keyof <span class="title class_">DatarList</span>&gt;(<span class="attr">key</span>: T): <span class="title class_">DatarList</span>[T] &#123;</span><br><span class="line">        <span class="keyword">let</span> <span class="attr">value</span>: <span class="built_in">any</span> = <span class="title class_">StData</span>.<span class="title function_">get</span>(key);</span><br><span class="line">        <span class="keyword">return</span> value;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">export</span> <span class="keyword">function</span> set&lt;T <span class="keyword">extends</span> keyof <span class="title class_">DatarList</span>&gt;(<span class="attr">key</span>: T, <span class="attr">value</span>: <span class="title class_">DatarList</span>[T]): <span class="built_in">void</span> &#123;</span><br><span class="line">        <span class="title class_">StData</span>.<span class="title function_">set</span>(key, value);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">export</span> <span class="keyword">function</span> listen&lt;T <span class="keyword">extends</span> keyof <span class="title class_">DatarList</span>&gt;(<span class="attr">key</span>: T, <span class="attr">node</span>: <span class="title class_">Node</span>, <span class="attr">call</span>: <span class="function">(<span class="params">value: DatarList[T]</span>) =&gt;</span> <span class="built_in">void</span>): <span class="built_in">void</span> &#123;</span><br><span class="line">        <span class="title class_">StData</span>.<span class="title function_">listen</span>(key, node, call);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">export</span> <span class="keyword">function</span> listenget&lt;T <span class="keyword">extends</span> keyof <span class="title class_">DatarList</span>&gt;(<span class="attr">key</span>: T, <span class="attr">dv</span>: <span class="built_in">any</span>, <span class="attr">node</span>: <span class="title class_">Node</span>, <span class="attr">call</span>: <span class="function">(<span class="params">value: DatarList[T]</span>) =&gt;</span> <span class="built_in">void</span>): <span class="built_in">void</span> &#123;</span><br><span class="line">        <span class="title class_">StData</span>.<span class="title function_">listenget</span>(key, dv, node, call);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">export</span> <span class="keyword">function</span> unlisten&lt;T <span class="keyword">extends</span> keyof <span class="title class_">DatarList</span>&gt;(<span class="attr">key</span>: T, <span class="attr">node</span>: <span class="title class_">Node</span>): <span class="built_in">void</span> &#123;</span><br><span class="line">        <span class="title class_">StData</span>.<span class="title function_">unlisten</span>(key, node);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">unlistenall</span>(<span class="params">node: Node</span>): <span class="built_in">void</span> &#123;</span><br><span class="line">        <span class="title class_">StData</span>.<span class="title function_">unlistenall</span>(node);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">type</span> <span class="title class_">DatarList</span> = &#123;</span><br><span class="line">    <span class="string">&quot;game/selectroom&quot;</span>: <span class="built_in">string</span>,</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>StData.ts</strong></p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; stEventDispatcher &#125; <span class="keyword">from</span> <span class="string">&quot;./StEventDispatcher&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> <span class="attr">cache</span>: <span class="built_in">any</span> = &#123;&#125;</span><br><span class="line"><span class="keyword">let</span> datadisp = <span class="keyword">new</span> stEventDispatcher</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">tostring</span>(<span class="params">v</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> v.<span class="title function_">toString</span>()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">tonumber</span>(<span class="params">v</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="title class_">Number</span>.<span class="built_in">parseInt</span>(v)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">isnumber</span>(<span class="params">v</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> !<span class="title class_">Number</span>.<span class="built_in">isNaN</span>(<span class="title function_">tonumber</span>(v))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">namespace</span> <span class="title class_">StData</span> &#123;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">get</span>(<span class="params">path: <span class="built_in">string</span>, dv?: <span class="built_in">any</span></span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (path == <span class="literal">null</span>) &#123; <span class="keyword">return</span> <span class="literal">null</span> &#125;</span><br><span class="line"><span class="keyword">let</span> paths = path.<span class="title function_">split</span>(<span class="string">&quot;/&quot;</span>)</span><br><span class="line"><span class="keyword">let</span> cur = cache</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> prev</span><br><span class="line"><span class="keyword">let</span> len = paths.<span class="property">length</span></span><br><span class="line"><span class="keyword">let</span> name = <span class="literal">null</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">name = paths[i]</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">typeof</span> (cur) != <span class="string">&quot;object&quot;</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">null</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> isArr = <span class="literal">false</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_">isnumber</span>(name)) &#123;</span><br><span class="line">name = <span class="title function_">tonumber</span>(name)</span><br><span class="line"></span><br><span class="line">isArr = <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">prev = cur</span><br><span class="line">cur = cur[name]</span><br><span class="line"><span class="keyword">if</span> (cur == <span class="literal">null</span> &amp;&amp; i &lt; len - <span class="number">1</span> &amp;&amp; len &gt; <span class="number">1</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (isArr) &#123;</span><br><span class="line">cur = []</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">cur = &#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line">prev[name] = cur</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (cur == <span class="literal">null</span>) &#123;</span><br><span class="line">prev[name] = dv</span><br><span class="line">cur = dv</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (cur != <span class="literal">null</span> &amp;&amp; <span class="keyword">typeof</span> (cur) == <span class="string">&quot;object&quot;</span>) &#123;</span><br><span class="line">cur[<span class="string">&quot;__path__&quot;</span>] = path</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> cur</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> set&lt;T&gt;(<span class="attr">path</span>: <span class="built_in">string</span>, <span class="attr">v</span>: T, ignoreEvent?: <span class="built_in">boolean</span>): T &#123;</span><br><span class="line"><span class="keyword">if</span> (path == <span class="literal">null</span>) &#123; <span class="keyword">return</span> <span class="literal">null</span> &#125;</span><br><span class="line"><span class="keyword">let</span> paths = path.<span class="title function_">split</span>(<span class="string">&quot;/&quot;</span>)</span><br><span class="line"><span class="keyword">let</span> cur = cache</span><br><span class="line"><span class="keyword">let</span> prev</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; paths.<span class="property">length</span> - <span class="number">1</span>; i++) &#123;</span><br><span class="line"><span class="keyword">let</span> <span class="attr">name</span>: <span class="built_in">any</span> = paths[i]</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">typeof</span> (cur) != <span class="string">&quot;object&quot;</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">null</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_">isnumber</span>(name)) &#123;</span><br><span class="line">name = <span class="title function_">tonumber</span>(name)</span><br><span class="line">&#125;</span><br><span class="line">prev = cur</span><br><span class="line">cur = cur[name]</span><br><span class="line"><span class="keyword">if</span> (cur == <span class="literal">null</span>) &#123;</span><br><span class="line">cur = &#123;&#125;</span><br><span class="line">prev[name] = cur</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> last = paths[paths.<span class="property">length</span> - <span class="number">1</span>]</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">typeof</span> (cur) != <span class="string">&quot;object&quot;</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">null</span></span><br><span class="line">&#125;</span><br><span class="line">cur[last] = v</span><br><span class="line"><span class="keyword">if</span> (!ignoreEvent) &#123;</span><br><span class="line">datadisp.<span class="title function_">dispatch</span>(path, v)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">change</span>(<span class="params">input: <span class="built_in">string</span> | <span class="built_in">any</span>, dv?: <span class="built_in">any</span></span>) &#123;</span><br><span class="line"><span class="keyword">let</span> path = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">typeof</span> (input) == <span class="string">&quot;string&quot;</span>) &#123;</span><br><span class="line">path = input</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">typeof</span> (input) != <span class="string">&quot;object&quot;</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line">path = input[<span class="string">&quot;__path__&quot;</span>]</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> value = <span class="title function_">get</span>(path, dv)</span><br><span class="line">datadisp.<span class="title function_">dispatch</span>(path, value)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">clear</span>(<span class="params"></span>) &#123;</span><br><span class="line">cache = &#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">listen</span>(<span class="params">path, node, func</span>) &#123;</span><br><span class="line">datadisp.<span class="title function_">addNode</span>(node, <span class="string">&quot;__datadisp&quot;</span>).<span class="title function_">listen</span>(path, func)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">unlisten</span>(<span class="params">path, node</span>) &#123;</span><br><span class="line"><span class="keyword">let</span> disp = datadisp.<span class="title function_">getDisp</span>(node, <span class="string">&quot;__datadisp&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> (disp) &#123;</span><br><span class="line">disp.<span class="title function_">removeEventFuncs</span>(path)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">unlistenall</span>(<span class="params">node</span>) &#123;</span><br><span class="line"><span class="keyword">let</span> disp = datadisp.<span class="title function_">getDisp</span>(node, <span class="string">&quot;__datadisp&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> (disp) &#123;</span><br><span class="line">disp.<span class="title function_">removeAll</span>()</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">listenget</span>(<span class="params">path, dv, node, func</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (func == <span class="literal">null</span>) &#123;</span><br><span class="line">func = node</span><br><span class="line">node = dv</span><br><span class="line">dv = <span class="literal">null</span></span><br><span class="line">&#125;</span><br><span class="line">datadisp.<span class="title function_">addNode</span>(node, <span class="string">&quot;__datadisp&quot;</span>).<span class="title function_">listen</span>(path, func)</span><br><span class="line"><span class="keyword">let</span> value = <span class="title function_">get</span>(path, dv)</span><br><span class="line"><span class="title function_">func</span>(value)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">listencallget</span>(<span class="params">path, node, func, getfunc</span>) &#123;</span><br><span class="line">datadisp.<span class="title function_">addNode</span>(node, <span class="string">&quot;__datadisp&quot;</span>).<span class="title function_">listen</span>(path, func)</span><br><span class="line"><span class="keyword">let</span> value = <span class="title function_">get</span>(path, <span class="literal">null</span>)</span><br><span class="line"><span class="keyword">if</span> (value == <span class="literal">null</span>) &#123;</span><br><span class="line"><span class="title function_">getfunc</span>()</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="title function_">func</span>(value)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">getDisp</span>(<span class="params"></span>) &#123;</span><br><span class="line"><span class="keyword">return</span> datadisp</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>StEventDispatcher.ts</strong></p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">StDestroy</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./DestroyOb&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; _decorator, <span class="title class_">Component</span>, <span class="title class_">Node</span> &#125; <span class="keyword">from</span> <span class="string">&quot;cc&quot;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">type</span> <span class="title class_">EventFunc</span> = <span class="function">(<span class="params">...datas</span>) =&gt;</span> <span class="built_in">any</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> funcInfo = &#123;</span><br><span class="line"><span class="attr">func</span>: <span class="title class_">EventFunc</span>,</span><br><span class="line"><span class="attr">enabled</span>: <span class="built_in">boolean</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> childInfo = &#123;</span><br><span class="line"><span class="attr">child</span>: stEventDispatcher,</span><br><span class="line"><span class="attr">enabled</span>: <span class="built_in">boolean</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">EventComponent</span> <span class="keyword">extends</span> <span class="title class_ inherited__">Component</span> &#123;</span><br><span class="line"><span class="keyword">private</span> <span class="attr">disps_</span>: stEventDispatcher[] = []</span><br><span class="line"><span class="title function_">addDisp</span>(<span class="params">disp: stEventDispatcher</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">disps_</span>.<span class="title function_">find</span>(<span class="function">(<span class="params">v</span>) =&gt;</span> v == disp) == <span class="literal">null</span>) &#123;</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">disps_</span>.<span class="title function_">push</span>(disp)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">onDestroy</span>(<span class="params"></span>) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> disp <span class="keyword">of</span> <span class="variable language_">this</span>.<span class="property">disps_</span>) &#123;</span><br><span class="line">disp.<span class="title function_">removeFromParent</span>()</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> sID = <span class="number">0</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">stEventDispatcher</span> &#123;</span><br><span class="line"><span class="keyword">static</span> <span class="title function_">bind</span>(<span class="params">node: Node, name: <span class="built_in">string</span></span>) &#123;</span><br><span class="line"><span class="keyword">let</span> <span class="attr">disp</span>: stEventDispatcher = node[name]</span><br><span class="line"><span class="keyword">if</span> (disp == <span class="literal">null</span>) &#123;</span><br><span class="line">disp = <span class="keyword">new</span> stEventDispatcher</span><br><span class="line">disp.<span class="title function_">link</span>(node)</span><br><span class="line">node[name] = disp</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> disp</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line"><span class="comment">// director.getScheduler().scheduleUpdate(this,-1,false)</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> funcs_ = <span class="keyword">new</span> <span class="title class_">Map</span>&lt;<span class="built_in">string</span>, funcInfo[]&gt;()</span><br><span class="line"><span class="keyword">private</span> <span class="attr">childs_</span>: childInfo[] = []</span><br><span class="line"><span class="keyword">private</span> <span class="attr">parent_</span>: stEventDispatcher</span><br><span class="line"><span class="keyword">get</span> <span class="title function_">parent</span>() &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">parent_</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">private</span> sid_ = sID++</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="attr">node_</span>: <span class="title class_">Node</span></span><br><span class="line"><span class="title function_">link</span>(<span class="params">node: Node</span>) &#123;</span><br><span class="line"><span class="keyword">let</span> self = <span class="variable language_">this</span></span><br><span class="line"><span class="title class_">StDestroy</span>(node, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">self.<span class="title function_">clear</span>()</span><br><span class="line">&#125;)</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">node_</span> = node</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">listen</span>(<span class="params">eventName: <span class="built_in">string</span>, func: EventFunc</span>) &#123;</span><br><span class="line"><span class="keyword">let</span> infos = <span class="variable language_">this</span>.<span class="property">funcs_</span>.<span class="title function_">get</span>(eventName)</span><br><span class="line"><span class="keyword">if</span> (infos == <span class="literal">null</span>) &#123;</span><br><span class="line">infos = []</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">funcs_</span>.<span class="title function_">set</span>(eventName, infos)</span><br><span class="line">&#125;</span><br><span class="line">infos.<span class="title function_">push</span>(&#123;</span><br><span class="line"><span class="attr">func</span>: func,</span><br><span class="line"><span class="attr">enabled</span>: <span class="literal">true</span>,</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">return</span> <span class="variable language_">this</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">removeEventFuncs</span>(<span class="params">eventName: <span class="built_in">string</span></span>) &#123;</span><br><span class="line"><span class="keyword">let</span> infos = <span class="variable language_">this</span>.<span class="property">funcs_</span>.<span class="title function_">get</span>(eventName)</span><br><span class="line"><span class="keyword">if</span> (infos) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> info <span class="keyword">of</span> infos) &#123;</span><br><span class="line">info.<span class="property">enabled</span> = <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">this</span>.<span class="title function_">refresh</span>()</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="variable language_">this</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">removeFunc</span>(<span class="params">func: EventFunc</span>) &#123;</span><br><span class="line"><span class="keyword">let</span> self = <span class="variable language_">this</span></span><br><span class="line"><span class="variable language_">this</span>.<span class="property">funcs_</span>.<span class="title function_">forEach</span>(<span class="keyword">function</span> (<span class="params">infos, eventName</span>) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> info <span class="keyword">of</span> infos) &#123;</span><br><span class="line"><span class="keyword">if</span> (info.<span class="property">func</span> == func) &#123;</span><br><span class="line">info.<span class="property">enabled</span> = <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="variable language_">this</span>.<span class="title function_">refresh</span>()</span><br><span class="line"><span class="keyword">return</span> <span class="variable language_">this</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">addNode</span>(<span class="params">node: Node, dispName?: <span class="built_in">string</span></span>) &#123;</span><br><span class="line">dispName = dispName || <span class="string">&quot;_default_child_disp_&quot;</span></span><br><span class="line"><span class="keyword">let</span> <span class="attr">disp</span>: stEventDispatcher = node[dispName]</span><br><span class="line"><span class="keyword">if</span> (disp) &#123;</span><br><span class="line"><span class="keyword">return</span> disp</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">disp = <span class="keyword">new</span> <span class="title function_">stEventDispatcher</span>()</span><br><span class="line"><span class="variable language_">this</span>.<span class="title function_">addChild</span>(disp)</span><br><span class="line">node[dispName] = disp</span><br><span class="line"></span><br><span class="line">disp.<span class="title function_">link</span>(node)</span><br><span class="line"><span class="keyword">return</span> disp</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">getDisp</span>(<span class="params">node: Node, dispName?: <span class="built_in">string</span></span>) &#123;</span><br><span class="line">dispName = dispName || <span class="string">&quot;_default_child_disp_&quot;</span></span><br><span class="line"><span class="keyword">let</span> <span class="attr">disp</span>: stEventDispatcher = node[dispName]</span><br><span class="line"><span class="keyword">return</span> disp</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">addChild</span>(<span class="params">disp: stEventDispatcher</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (disp.<span class="property">parent_</span> != <span class="literal">null</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">null</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> childInfo = <span class="variable language_">this</span>.<span class="property">childs_</span>.<span class="title function_">find</span>(<span class="function">(<span class="params">v</span>) =&gt;</span> v.<span class="property">child</span> == disp)</span><br><span class="line"><span class="keyword">if</span> (childInfo == <span class="literal">null</span>) &#123;</span><br><span class="line">childInfo = &#123;</span><br><span class="line"><span class="attr">child</span>: disp,</span><br><span class="line"><span class="attr">enabled</span>: <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">childs_</span>.<span class="title function_">push</span>(childInfo)</span><br><span class="line">&#125;</span><br><span class="line">childInfo.<span class="property">enabled</span> = <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">disp.<span class="property">parent_</span> = <span class="variable language_">this</span></span><br><span class="line"><span class="keyword">return</span> <span class="variable language_">this</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">removeChild</span>(<span class="params">disp: stEventDispatcher</span>) &#123;</span><br><span class="line"><span class="keyword">let</span> info = <span class="variable language_">this</span>.<span class="property">childs_</span>.<span class="title function_">find</span>(<span class="function">(<span class="params">v</span>) =&gt;</span> v.<span class="property">child</span> == disp)</span><br><span class="line"><span class="keyword">if</span> (info) &#123;</span><br><span class="line">info.<span class="property">enabled</span> = <span class="literal">false</span></span><br><span class="line">info.<span class="property">child</span>.<span class="property">parent_</span> = <span class="literal">null</span></span><br><span class="line"><span class="variable language_">this</span>.<span class="title function_">refresh</span>()</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="variable language_">this</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">removeAllChildren</span>(<span class="params"></span>) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> child <span class="keyword">of</span> <span class="variable language_">this</span>.<span class="property">childs_</span>) &#123;</span><br><span class="line">child.<span class="property">enabled</span> = <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">this</span>.<span class="title function_">refresh</span>()</span><br><span class="line"><span class="keyword">return</span> <span class="variable language_">this</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">removeFromParent</span>(<span class="params"></span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">parent_</span>) &#123;</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">parent_</span>.<span class="title function_">removeChild</span>(<span class="variable language_">this</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="variable language_">this</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">removeAll</span>(<span class="params"></span>) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> child <span class="keyword">of</span> <span class="variable language_">this</span>.<span class="property">childs_</span>) &#123;</span><br><span class="line">child.<span class="property">enabled</span> = <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">funcs_</span>.<span class="title function_">forEach</span>(<span class="keyword">function</span> (<span class="params">infos, eventName</span>) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> info <span class="keyword">of</span> infos) &#123;</span><br><span class="line">info.<span class="property">enabled</span> = <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="variable language_">this</span>.<span class="title function_">refresh</span>()</span><br><span class="line"><span class="keyword">return</span> <span class="variable language_">this</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">clear</span>(<span class="params"></span>) &#123;</span><br><span class="line"><span class="variable language_">this</span>.<span class="title function_">removeFromParent</span>()</span><br><span class="line"><span class="variable language_">this</span>.<span class="title function_">removeAll</span>()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> isDispatching_ = <span class="literal">false</span></span><br><span class="line"><span class="title function_">dispatch</span>(<span class="params">eventName: <span class="built_in">string</span>, ...datas</span>) &#123;</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">isDispatching_</span> = <span class="literal">true</span></span><br><span class="line"><span class="keyword">let</span> tempChilds = <span class="variable language_">this</span>.<span class="property">childs_</span>.<span class="title function_">slice</span>()</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> info <span class="keyword">of</span> tempChilds) &#123;</span><br><span class="line"><span class="keyword">if</span> (info.<span class="property">enabled</span>) &#123;</span><br><span class="line"><span class="comment">//EventDispatcher.prototype.dispatch.apply(child.child,datas)</span></span><br><span class="line">info.<span class="property">child</span>.<span class="title function_">dispatch</span>(eventName, ...datas)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> self = <span class="variable language_">this</span></span><br><span class="line"><span class="keyword">let</span> infos = <span class="variable language_">this</span>.<span class="property">funcs_</span>.<span class="title function_">get</span>(eventName)</span><br><span class="line"><span class="keyword">if</span> (infos) &#123;</span><br><span class="line"><span class="keyword">let</span> tempInfos = infos.<span class="title function_">slice</span>()</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> info <span class="keyword">of</span> tempInfos) &#123;</span><br><span class="line"><span class="keyword">if</span> (info.<span class="property">enabled</span>) &#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="comment">//info.func.apply(null,datas)</span></span><br><span class="line">info.<span class="title function_">func</span>(...datas)</span><br><span class="line">&#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">isDispatching_</span> = <span class="literal">false</span></span><br><span class="line"><span class="variable language_">this</span>.<span class="title function_">refresh</span>()</span><br><span class="line"><span class="keyword">return</span> <span class="variable language_">this</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> isDirty_ = <span class="literal">false</span></span><br><span class="line"><span class="keyword">private</span> <span class="title function_">refresh</span>(<span class="params"></span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">isDispatching_</span>) &#123;</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">isDirty_</span> = <span class="literal">true</span></span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">isDirty_</span> == <span class="literal">false</span>) &#123;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">isDirty_</span> = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> len = <span class="number">0</span></span><br><span class="line">len = <span class="variable language_">this</span>.<span class="property">childs_</span>.<span class="property">length</span></span><br><span class="line"><span class="keyword">let</span> count = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = len - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line"><span class="keyword">let</span> child = <span class="variable language_">this</span>.<span class="property">childs_</span>[i]</span><br><span class="line"><span class="keyword">if</span> (child.<span class="property">enabled</span> == <span class="literal">false</span>) &#123;</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">childs_</span>.<span class="title function_">splice</span>(i, <span class="number">1</span>)</span><br><span class="line">count++</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> self = <span class="variable language_">this</span></span><br><span class="line"><span class="variable language_">this</span>.<span class="property">funcs_</span>.<span class="title function_">forEach</span>(<span class="keyword">function</span> (<span class="params">infos, eventName</span>) &#123;</span><br><span class="line"><span class="keyword">let</span> len = infos.<span class="property">length</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = len - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line"><span class="keyword">let</span> info = infos[i]</span><br><span class="line"><span class="keyword">if</span> (info.<span class="property">enabled</span> == <span class="literal">false</span>) &#123;</span><br><span class="line">infos.<span class="title function_">splice</span>(i, <span class="number">1</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>DestroyOb.ts</strong></p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; stEventDispatcher &#125; <span class="keyword">from</span> <span class="string">&quot;./StEventDispatcher&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; _decorator, <span class="title class_">Component</span>, <span class="title class_">Node</span> &#125; <span class="keyword">from</span> <span class="string">&quot;cc&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> &#123; ccclass, property &#125; = _decorator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> eventName = <span class="string">&quot;_onDestroy_&quot;</span></span><br><span class="line"><span class="meta">@ccclass</span>(<span class="string">&#x27;DestroyOb&#x27;</span>)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">DestroyOb</span> <span class="keyword">extends</span> <span class="title class_ inherited__">Component</span> &#123;</span><br><span class="line"><span class="keyword">static</span> <span class="title function_">getCom</span>(<span class="attr">node</span>: <span class="title class_">Node</span>): <span class="title class_">DestroyOb</span> &#123;</span><br><span class="line"><span class="keyword">let</span> com = node.<span class="title function_">getComponent</span>(<span class="title class_">DestroyOb</span>)</span><br><span class="line"><span class="keyword">if</span> (com == <span class="literal">null</span>) &#123;</span><br><span class="line">com = node.<span class="title function_">addComponent</span>(<span class="title class_">DestroyOb</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> com</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> disp_ = <span class="keyword">new</span> stEventDispatcher</span><br><span class="line"><span class="title function_">listen</span>(<span class="params">func: <span class="built_in">Function</span>, node?: Node</span>) &#123;</span><br><span class="line"><span class="keyword">let</span> <span class="attr">disp</span>: stEventDispatcher</span><br><span class="line"><span class="keyword">if</span> (node) &#123;</span><br><span class="line">disp = <span class="variable language_">this</span>.<span class="property">disp_</span>.<span class="title function_">addNode</span>(node, <span class="string">&quot;__destroy_ob__&quot;</span>)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">disp = <span class="variable language_">this</span>.<span class="property">disp_</span></span><br><span class="line">&#125;</span><br><span class="line">disp.<span class="title function_">listen</span>(eventName, <span class="keyword">function</span> (<span class="params">...params</span>) &#123;</span><br><span class="line"><span class="title function_">func</span>(...params)</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">protected</span> <span class="title function_">onDestroy</span>(): <span class="built_in">void</span> &#123;</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">disp_</span>.<span class="title function_">dispatch</span>(eventName)</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">disp_</span>.<span class="title function_">clear</span>()</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">StDestroy</span>(<span class="params">node: Node, func: <span class="built_in">Function</span>, targetNode?: Node</span>) &#123;</span><br><span class="line">node.<span class="property">active</span> = <span class="literal">true</span></span><br><span class="line"><span class="title class_">DestroyOb</span>.<span class="title function_">getCom</span>(node).<span class="title function_">listen</span>(func, targetNode)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> cocos </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记录一下防火墙firewall的使用方法</title>
      <link href="/%E8%AE%B0%E5%BD%95%E4%B8%80%E4%B8%8B%E9%98%B2%E7%81%AB%E5%A2%99firewall%E7%9A%84%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/"/>
      <url>/%E8%AE%B0%E5%BD%95%E4%B8%80%E4%B8%8B%E9%98%B2%E7%81%AB%E5%A2%99firewall%E7%9A%84%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h2 id="防火墙的开启、关闭、禁用命令"><a href="#防火墙的开启、关闭、禁用命令" class="headerlink" title="防火墙的开启、关闭、禁用命令"></a>防火墙的开启、关闭、禁用命令</h2><ul><li><p>设置开机启用防火墙</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable firewalld.service</span><br></pre></td></tr></table></figure></li><li><p>设置开机禁用防火墙</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl disable firewalld.service</span><br></pre></td></tr></table></figure></li><li><p>启动防火墙</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start firewalld</span><br></pre></td></tr></table></figure></li><li><p>关闭防火墙</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld</span><br></pre></td></tr></table></figure></li><li><p>检查防火墙状态</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status firewalld</span><br></pre></td></tr></table></figure></li></ul><h2 id="查看防火墙规则"><a href="#查看防火墙规则" class="headerlink" title="查看防火墙规则"></a>查看防火墙规则</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --list-all</span><br></pre></td></tr></table></figure><h2 id="查询端口是否开放"><a href="#查询端口是否开放" class="headerlink" title="查询端口是否开放"></a>查询端口是否开放</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --query-port=8080/tcp</span><br></pre></td></tr></table></figure><h2 id="开放端口"><a href="#开放端口" class="headerlink" title="开放端口"></a>开放端口</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --permanent --add-port=80/tcp</span><br></pre></td></tr></table></figure><h2 id="移除端口"><a href="#移除端口" class="headerlink" title="移除端口"></a>移除端口</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --permanent --remove-port=8080/tcp</span><br></pre></td></tr></table></figure><h2 id="重启防火墙-修改配置后要重启防火墙"><a href="#重启防火墙-修改配置后要重启防火墙" class="headerlink" title="重启防火墙(修改配置后要重启防火墙)"></a>重启防火墙(修改配置后要重启防火墙)</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小五一来了</title>
      <link href="/%E5%B0%8F%E4%BA%94%E4%B8%80%E6%9D%A5%E4%BA%86/"/>
      <url>/%E5%B0%8F%E4%BA%94%E4%B8%80%E6%9D%A5%E4%BA%86/</url>
      
        <content type="html"><![CDATA[<p>2024年5月1日18时52分，你来到这个世界，带着无尽的希望与喜悦。那一刻，时间仿佛停滞，整个世界因你的到来而变得更加光辉灿烂。</p><p>你的小手紧握着，似乎在向我们展示你对这个新世界的渴望与好奇。你的小脸上洋溢着纯真的笑容，让我们感受到无尽的幸福。我们深知，你的未来充满了无限可能，而我们将尽全力为你创造一个温暖、充满爱的家。</p><p>看着你安详地躺在怀里，我们心中满是感恩与激动。从今天起，我们的生命将因你而变得更加完整和丰富。你的每一次微笑、每一个成长的瞬间，都会成为我们最珍贵的记忆。</p><p>未来的日子里，我们将陪伴你一起经历风雨，一起迎接阳光。无论前方的道路多么曲折，我们都会在你身边，给予你无条件的爱与支持。我们希望，你能够勇敢追梦，探索这个世界的美好，成为最好的自己。</p><p>欢迎你，亲爱的孩子。你的到来，让我们深刻体会到生命的奇迹和爱的伟大。从此，我们的人生将因你而更加多彩，而你，将永远是我们心中最闪耀的星星。</p><p><img src="https://cdn.jsdelivr.net/gh/haix8/images/IMG_0814.jpeg"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信订阅号定时发送消息的工具</title>
      <link href="/%E5%BE%AE%E4%BF%A1%E8%AE%A2%E9%98%85%E5%8F%B7%E5%AE%9A%E6%97%B6%E5%8F%91%E9%80%81%E6%B6%88%E6%81%AF%E7%9A%84%E5%B7%A5%E5%85%B7/"/>
      <url>/%E5%BE%AE%E4%BF%A1%E8%AE%A2%E9%98%85%E5%8F%B7%E5%AE%9A%E6%97%B6%E5%8F%91%E9%80%81%E6%B6%88%E6%81%AF%E7%9A%84%E5%B7%A5%E5%85%B7/</url>
      
        <content type="html"><![CDATA[<h2 id="为什么做"><a href="#为什么做" class="headerlink" title="为什么做"></a>为什么做</h2><p>之前在掘金上看到很多人分享，给女朋友或“任何人”每天定时推送消息，像是纪念日提醒、每日一句关心这类的。感觉有点意思于是想着也给我家那位整个。</p><h2 id="怎么做"><a href="#怎么做" class="headerlink" title="怎么做"></a>怎么做</h2><p>实现方式五花八门，我为了方便利用微信服务号给推送模版信息,定时任务用了laravel的任务调度(其实就只是用它一个定时任务，不用框架也完全可以)。</p><h2 id="实现原理"><a href="#实现原理" class="headerlink" title="实现原理"></a>实现原理</h2><ul><li><input disabled="" type="checkbox"> 调用天行数据的api，获取自己想要的数据,封装起来</li><li><input disabled="" type="checkbox"> 调用easywechat的接口，实现给微信好友发送消息</li><li><input disabled="" type="checkbox"> 添加定时任务，实现定时发送</li></ul><h2 id="实现步骤"><a href="#实现步骤" class="headerlink" title="实现步骤"></a>实现步骤</h2><ol><li><p>创建微信模版消息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">❤早安吖❤</span><br><span class="line">&#123;&#123;date.DATA&#125;&#125;&#123;&#123;remark.DATA&#125;&#125;</span><br><span class="line">所在城市：&#123;&#123;city.DATA&#125;&#125;</span><br><span class="line">今天天气：&#123;&#123;weather.DATA&#125;&#125;</span><br><span class="line">气温变化：&#123;&#123;minTemperature.DATA&#125;&#125;~&#123;&#123;maxTemperature.DATA&#125;&#125;</span><br><span class="line">今天建议：&#123;&#123;tips.DATA&#125;&#125;</span><br><span class="line"></span><br><span class="line">今天是我们相恋De第&#123;&#123;loveDays.DATA&#125;&#125;天</span><br><span class="line">距离大宝宝的生日还有&#123;&#123;birthDay.DATA&#125;&#125;天</span><br><span class="line">距离小宝宝的生日还有&#123;&#123;childBirthDay.DATA&#125;&#125;天</span><br><span class="line"></span><br><span class="line">&#123;&#123;rainbow.DATA&#125;&#125;</span><br></pre></td></tr></table></figure></li><li><p>调用天行数据接口，获取天气预报</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">tianqi</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="variable">$uri</span> = <span class="string">&#x27;https://apis.tianapi.com/tianqi/index&#x27;</span>;</span><br><span class="line">        <span class="variable">$client</span> = <span class="keyword">new</span> <span class="title class_">Client</span>();</span><br><span class="line">        <span class="variable">$response</span> = <span class="variable">$client</span>-&gt;<span class="title function_ invoke__">get</span>(<span class="variable">$uri</span>, [</span><br><span class="line">            <span class="string">&#x27;query&#x27;</span> =&gt; [</span><br><span class="line">                <span class="string">&#x27;key&#x27;</span> =&gt; <span class="string">&#x27;key&#x27;</span>,//你自己申请的key</span><br><span class="line">                <span class="string">&#x27;city&#x27;</span> =&gt; <span class="string">&#x27;郑州&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;type&#x27;</span> =&gt; <span class="string">&#x27;1&#x27;</span></span><br><span class="line">            ]</span><br><span class="line">        ]);</span><br><span class="line"><span class="title function_ invoke__">file_put_contents</span>(<span class="string">&#x27;t.json&#x27;</span>,<span class="variable">$response</span>-&gt;<span class="title function_ invoke__">getBody</span>()-&gt;<span class="title function_ invoke__">getContents</span>());<span class="keyword">die</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">json_decode</span>(<span class="variable">$response</span>-&gt;<span class="title function_ invoke__">getBody</span>()-&gt;<span class="title function_ invoke__">getContents</span>())-&gt;result;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (\<span class="built_in">Exception</span> <span class="variable">$exception</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    &#123;</span></span><br><span class="line"><span class="comment">        &quot;code&quot;: 200,</span></span><br><span class="line"><span class="comment">        &quot;msg&quot;: &quot;success&quot;,</span></span><br><span class="line"><span class="comment">        &quot;result&quot;: &#123;</span></span><br><span class="line"><span class="comment">            &quot;date&quot;: &quot;2023-12-13&quot;,</span></span><br><span class="line"><span class="comment">            &quot;week&quot;: &quot;星期三&quot;,</span></span><br><span class="line"><span class="comment">            &quot;province&quot;: &quot;河南&quot;,</span></span><br><span class="line"><span class="comment">            &quot;area&quot;: &quot;郑州&quot;,</span></span><br><span class="line"><span class="comment">            &quot;areaid&quot;: &quot;101180101&quot;,</span></span><br><span class="line"><span class="comment">            &quot;weather&quot;: &quot;阴&quot;,</span></span><br><span class="line"><span class="comment">            &quot;weatherimg&quot;: &quot;yin.png&quot;,</span></span><br><span class="line"><span class="comment">            &quot;weathercode&quot;: &quot;yin&quot;,</span></span><br><span class="line"><span class="comment">            &quot;real&quot;: &quot;-0.5℃&quot;,</span></span><br><span class="line"><span class="comment">            &quot;lowest&quot;: &quot;-1℃&quot;,</span></span><br><span class="line"><span class="comment">            &quot;highest&quot;: &quot;0℃&quot;,</span></span><br><span class="line"><span class="comment">            &quot;wind&quot;: &quot;东北风&quot;,</span></span><br><span class="line"><span class="comment">            &quot;windspeed&quot;: &quot;11&quot;,</span></span><br><span class="line"><span class="comment">            &quot;windsc&quot;: &quot;2级&quot;,</span></span><br><span class="line"><span class="comment">            &quot;sunrise&quot;: &quot;07:23&quot;,</span></span><br><span class="line"><span class="comment">            &quot;sunset&quot;: &quot;17:15&quot;,</span></span><br><span class="line"><span class="comment">            &quot;moonrise&quot;: &quot;&quot;,</span></span><br><span class="line"><span class="comment">            &quot;moondown&quot;: &quot;&quot;,</span></span><br><span class="line"><span class="comment">            &quot;pcpn&quot;: &quot;0&quot;,</span></span><br><span class="line"><span class="comment">            &quot;uv_index&quot;: &quot;0&quot;,</span></span><br><span class="line"><span class="comment">            &quot;aqi&quot;: &quot;104&quot;,</span></span><br><span class="line"><span class="comment">            &quot;quality&quot;: &quot;轻度&quot;,</span></span><br><span class="line"><span class="comment">            &quot;vis&quot;: &quot;1&quot;,</span></span><br><span class="line"><span class="comment">            &quot;humidity&quot;: &quot;96&quot;,</span></span><br><span class="line"><span class="comment">            &quot;alarmlist&quot;: [</span></span><br><span class="line"><span class="comment">                &#123;</span></span><br><span class="line"><span class="comment">                &quot;province&quot;: &quot;河南省&quot;,</span></span><br><span class="line"><span class="comment">                &quot;city&quot;: &quot;&quot;,</span></span><br><span class="line"><span class="comment">                &quot;level&quot;: &quot;黄色&quot;,</span></span><br><span class="line"><span class="comment">                &quot;type&quot;: &quot;道路结冰&quot;,</span></span><br><span class="line"><span class="comment">                &quot;content&quot;: &quot;河南省气象台2023年12月12日16时00分继续发布道路结冰黄色预警：预计12月12日16时到13日16时，西部、北中部有雨夹雪或中雪，局部大雪或暴雪，部分县市伴有冻雨；其他县市有小到中雨。全省大部县市路表温度低于0℃，将出现对交通有较大影响的道路结冰，其中黄河以北及三门峡、洛阳、郑州、开封、许昌北部、平顶山北部影响较严重。请注意防范。\n防御指南：\n1.交通运输、公安等部门应按照职责做好道路结冰应对准备工作；\n2.驾驶人员应当注意路况，安全行驶；\n3.行人减少外出，必要外出时尽量少骑自行车，注意防滑。（预警信息来源：国家预警信息发布中心）&quot;,</span></span><br><span class="line"><span class="comment">                &quot;time&quot;: &quot;2023-12-12 16:00:00&quot;</span></span><br><span class="line"><span class="comment">                &#125;</span></span><br><span class="line"><span class="comment">            ],</span></span><br><span class="line"><span class="comment">            &quot;tips&quot;: &quot;天气寒冷，冬季着装：棉衣、羽绒服、冬大衣、皮夹克加羊毛衫、厚呢外套、呢帽、手套等；年老体弱者尽量少外出。空气质量较差，敏感人群建议减少体力消耗类户外活动。&quot;</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">    &#125;       </span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>组合模版消息</p><p>计算恋爱天数</p> <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">getLoveDays</span>(<span class="params"></span>): <span class="title">int</span></span>&#123;</span><br><span class="line">    <span class="variable">$start_date</span> = <span class="built_in">self</span>::<span class="variable">$loveDays</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Carbon</span>::<span class="title function_ invoke__">now</span>()-&gt;<span class="title function_ invoke__">diffInDays</span>(<span class="variable">$start_date</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>计算生日剩余天数</p> <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">getBirthDays</span>(<span class="params"><span class="variable">$start_date</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$birthday</span> = <span class="title class_">Carbon</span>::<span class="title function_ invoke__">parse</span>(<span class="variable">$start_date</span>);</span><br><span class="line">    <span class="variable">$birthday</span>-&gt;<span class="title function_ invoke__">year</span>(<span class="title function_ invoke__">date</span>(<span class="string">&#x27;Y&#x27;</span>));</span><br><span class="line">    <span class="variable">$d</span> = <span class="title class_">Carbon</span>::<span class="title function_ invoke__">now</span>()-&gt;<span class="title function_ invoke__">diffInDays</span>(<span class="variable">$birthday</span>, <span class="literal">false</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$d</span> &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="comment">//计算明年</span></span><br><span class="line">        <span class="variable">$birthday</span>-&gt;<span class="title function_ invoke__">year</span>(<span class="title function_ invoke__">date</span>(<span class="string">&quot;Y&quot;</span>, <span class="title function_ invoke__">strtotime</span>(<span class="string">&quot;+1 year&quot;</span>)));</span><br><span class="line">        <span class="variable">$d</span> = <span class="title class_">Carbon</span>::<span class="title function_ invoke__">now</span>()-&gt;<span class="title function_ invoke__">diffInDays</span>(<span class="variable">$birthday</span>, <span class="literal">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$d</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> 模版消息</p> <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$msg</span> = [</span><br><span class="line">    <span class="string">&#x27;touser&#x27;</span> =&gt; <span class="variable">$touser</span>,</span><br><span class="line">    <span class="string">&#x27;template_id&#x27;</span> =&gt; <span class="string">&#x27;2-grcuQ9CVdf0mMrPjf_6ipXBiCN1t0XyVmhn6GC_YM&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;data&#x27;</span> =&gt; [</span><br><span class="line">        <span class="string">&#x27;date&#x27;</span> =&gt; [</span><br><span class="line">            <span class="title function_ invoke__">date</span>(<span class="string">&#x27;Y-m-d&#x27;</span>) . <span class="variable">$weather</span>-&gt;week,</span><br><span class="line">            <span class="string">&#x27;#00BFFF&#x27;</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="comment">// &quot;❤&quot;</span></span><br><span class="line">        <span class="string">&#x27;remark&#x27;</span> =&gt; <span class="variable">$remark</span>,</span><br><span class="line">        <span class="string">&#x27;city&#x27;</span> =&gt; [</span><br><span class="line">            <span class="variable">$weather</span>-&gt;area,</span><br><span class="line">            <span class="string">&#x27;&#x27;</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="string">&#x27;weather&#x27;</span> =&gt; [</span><br><span class="line">            <span class="variable">$weather</span>-&gt;weather,</span><br><span class="line">            <span class="string">&quot;#1f95c5&quot;</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="string">&#x27;minTemperature&#x27;</span> =&gt; [</span><br><span class="line">            <span class="string">&#x27;value&#x27;</span> =&gt; <span class="variable">$weather</span>-&gt;lowest,</span><br><span class="line">            <span class="string">&#x27;color&#x27;</span> =&gt; <span class="string">&#x27;#0ace3c&#x27;</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="string">&#x27;maxTemperature&#x27;</span> =&gt; [</span><br><span class="line">            <span class="string">&#x27;value&#x27;</span> =&gt; <span class="variable">$weather</span>-&gt;highest,</span><br><span class="line">            <span class="string">&#x27;color&#x27;</span> =&gt; <span class="string">&#x27;#dc1010&#x27;</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="string">&#x27;tips&#x27;</span> =&gt; [</span><br><span class="line">            <span class="variable">$weather</span>-&gt;tips,</span><br><span class="line">            <span class="string">&quot;&quot;</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="string">&#x27;loveDays&#x27;</span> =&gt; [</span><br><span class="line">            <span class="variable">$loveDays</span>,</span><br><span class="line">            <span class="string">&quot;#FFA500&quot;</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="string">&#x27;birthDay&#x27;</span> =&gt; [</span><br><span class="line">            <span class="variable">$birthDays</span>,</span><br><span class="line">            <span class="string">&quot;#FFA500&quot;</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="string">&#x27;childBirthDay&#x27;</span> =&gt; [</span><br><span class="line">            <span class="variable">$childBirthDay</span>,</span><br><span class="line">            <span class="string">&quot;#FFA500&quot;</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="string">&#x27;rainbow&#x27;</span> =&gt; [</span><br><span class="line">            <span class="variable">$rainbow</span>,</span><br><span class="line">            <span class="string">&quot;#FF69B4&quot;</span></span><br><span class="line">        ],</span><br><span class="line">    ],</span><br><span class="line">];</span><br></pre></td></tr></table></figure></li><li><p>给指定微信好友推送消息</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> <span class="title">EasyWeChat</span>\<span class="title">Factory</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$config</span> = [</span><br><span class="line">    <span class="string">&#x27;app_id&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,<span class="comment">//你自己的appID</span></span><br><span class="line">    <span class="string">&#x27;secret&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,<span class="comment">//你自己的appsecret</span></span><br><span class="line">    <span class="comment">// 指定 API 调用返回结果的类型：array(default)/collection/object/raw/自定义类名</span></span><br><span class="line">    <span class="string">&#x27;response_type&#x27;</span> =&gt; <span class="string">&#x27;array&#x27;</span>,</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">];</span><br><span class="line"><span class="variable language_">$this</span>-&gt;app = <span class="title class_">Factory</span>::<span class="title function_ invoke__">officialAccount</span>(<span class="variable">$config</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$result</span> = <span class="variable language_">$this</span>-&gt;app-&gt;template_message-&gt;<span class="title function_ invoke__">send</span>(<span class="variable">$msg</span>);</span><br></pre></td></tr></table></figure></li><li><p>添加定时任务</p></li></ol><p>Linux crontab</p><p><code>* * * * * cd /你的项目路径 &amp;&amp; php artisan schedule:run &gt;&gt; /dev/null 2&gt;&amp;1</code></p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p><a href="https://github.com/haix8/wechatMessage">完整代码点这里</a></p><p>微信在2023年5月对模版消息作出调整，把自定义颜色、表情符号、备注内容等移除了，具体可见<a href="https://mp.weixin.qq.com/cgi-bin/announce?action=getannouncement&announce_id=11680142498cInTZ&version=&lang=zh_CN&token=">公告</a>，所以以上代码中的自定义颜色、remark都已不生效，但是也不影响正常使用。</p>]]></content>
      
      
      
        <tags>
            
            <tag> php </tag>
            
            <tag> laravel </tag>
            
            <tag> wechat </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>通过小程序UrlScheme跳转小程序</title>
      <link href="/%E9%80%9A%E8%BF%87%E5%B0%8F%E7%A8%8B%E5%BA%8FUrlScheme%E8%B7%B3%E8%BD%AC%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
      <url>/%E9%80%9A%E8%BF%87%E5%B0%8F%E7%A8%8B%E5%BA%8FUrlScheme%E8%B7%B3%E8%BD%AC%E5%B0%8F%E7%A8%8B%E5%BA%8F/</url>
      
        <content type="html"><![CDATA[<p>获取了小程序的scheme码，就可以像打开网页链接一样，通过短信、邮件、外部网页等微信以外的渠道拉起小程序，URL Scheme链接形式如<code>weixin://dl/business/?t= *TICKET*</code>。</p><p><strong>话不多说直接上代码</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//获取小程序UrlScheme</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//小程序的 AppID和 AppSecret</span></span><br><span class="line"><span class="variable">$appId</span> = <span class="string">&#x27;*********&#x27;</span>;</span><br><span class="line"><span class="variable">$appSecret</span> = <span class="string">&#x27;*********&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$us</span> = <span class="title function_ invoke__">getUrlScheme</span>(<span class="title function_ invoke__">getAccessToken</span>(<span class="variable">$appId</span>, <span class="variable">$appSecret</span>));</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">Header</span>(<span class="string">&quot;Location: <span class="subst">$us</span>&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * curl</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">httpRequest</span>(<span class="params"><span class="variable">$url</span>, <span class="variable">$format</span> = <span class="string">&#x27;get&#x27;</span>, <span class="variable">$data</span> = <span class="literal">null</span>, <span class="variable">$headerArray</span> = []</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//设置头信息</span></span><br><span class="line">    <span class="variable">$curl</span> = <span class="title function_ invoke__">curl_init</span>();</span><br><span class="line">    <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$curl</span>, CURLOPT_URL, <span class="variable">$url</span>);</span><br><span class="line">    <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$curl</span>, CURLOPT_SSL_VERIFYPEER, <span class="literal">FALSE</span>);</span><br><span class="line">    <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$curl</span>, CURLOPT_SSL_VERIFYHOST, <span class="literal">FALSE</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$format</span> == <span class="string">&#x27;post&#x27;</span>) &#123;</span><br><span class="line">        <span class="comment">//post传值设置post传参</span></span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$curl</span>, CURLOPT_POST, <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$data</span>) &#123;</span><br><span class="line">            <span class="variable">$data</span> = <span class="title function_ invoke__">json_encode</span>(<span class="variable">$data</span>);</span><br><span class="line">            <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$curl</span>, CURLOPT_POSTFIELDS, <span class="variable">$data</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$curl</span>, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$headerArray</span>) &#123;</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$curl</span>, CURLOPT_HTTPHEADER, <span class="variable">$headerArray</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$data</span> = <span class="title function_ invoke__">json_decode</span>(<span class="title function_ invoke__">curl_exec</span>(<span class="variable">$curl</span>), <span class="literal">true</span>);</span><br><span class="line">    <span class="title function_ invoke__">curl_close</span>(<span class="variable">$curl</span>);</span><br><span class="line">    <span class="comment">//返回接口返回数据</span></span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$data</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getAccessToken</span>(<span class="params"><span class="variable">$appId</span>, <span class="variable">$appSecret</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$redis</span> = <span class="keyword">new</span> <span class="title class_">Redis</span>();</span><br><span class="line">    <span class="variable">$redis</span>-&gt;<span class="title function_ invoke__">connect</span>(<span class="string">&#x27;127.0.0.1&#x27;</span>, <span class="number">6379</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$key</span> = <span class="string">&#x27;rout:accessToke&#x27;</span>;</span><br><span class="line">    <span class="variable">$at</span> = <span class="variable">$redis</span>-&gt;<span class="title function_ invoke__">get</span>(<span class="variable">$key</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$at</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$at</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$data</span> = <span class="title function_ invoke__">httpRequest</span>(</span><br><span class="line">        <span class="string">&#x27;https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&amp;appid=&#x27;</span> . <span class="variable">$appId</span> . <span class="string">&#x27;&amp;secret=&#x27;</span> . <span class="variable">$appSecret</span>,</span><br><span class="line">        <span class="string">&#x27;get&#x27;</span>,</span><br><span class="line">        <span class="literal">null</span>,</span><br><span class="line">        <span class="keyword">array</span>(<span class="string">&quot;Content-type:application/json;&quot;</span>, <span class="string">&quot;Accept:application/json&quot;</span>)</span><br><span class="line">    );</span><br><span class="line">    <span class="variable">$at</span> = <span class="variable">$data</span>[<span class="string">&#x27;access_token&#x27;</span>] ?? <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="variable">$redis</span>-&gt;<span class="title function_ invoke__">set</span>(<span class="string">&#x27;rout:accessToke&#x27;</span>, <span class="variable">$at</span>, <span class="number">60</span> * <span class="number">90</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$at</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getUrlScheme</span>(<span class="params"><span class="variable">$accessToken</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$data</span> = <span class="title function_ invoke__">httpRequest</span>(</span><br><span class="line">        <span class="string">&#x27;https://api.weixin.qq.com/wxa/generatescheme?access_token=&#x27;</span> . <span class="variable">$accessToken</span>,</span><br><span class="line">        <span class="string">&#x27;post&#x27;</span>,</span><br><span class="line">        [</span><br><span class="line">            <span class="string">&#x27;jump_wxa&#x27;</span> =&gt; [</span><br><span class="line">                <span class="string">&#x27;path&#x27;</span> =&gt; <span class="string">&quot;/pages/index/index&quot;</span>,//跳转小程序地址</span><br><span class="line">                <span class="string">&#x27;query&#x27;</span> =&gt; <span class="string">&quot;&quot;</span>//跳转小程序额外参数</span><br><span class="line">            ],</span><br><span class="line">            <span class="string">&#x27;expire_type&#x27;</span> =&gt; <span class="number">0</span></span><br><span class="line">        ]</span><br><span class="line">    );</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$data</span>[<span class="string">&#x27;openlink&#x27;</span>] ?? <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 微信小程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>UniApp接入ApplePay</title>
      <link href="/UniApp%E6%8E%A5%E5%85%A5ApplePay/"/>
      <url>/UniApp%E6%8E%A5%E5%85%A5ApplePay/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/applepay.png" alt="applepay.webp"></p><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>最近一个app项目中需要对接Apple Pay内购，因为也是第一次对接，所以记录下过程。</p><h2 id="上传应用版本"><a href="#上传应用版本" class="headerlink" title="上传应用版本"></a>上传应用版本</h2><ul><li>在<a href="https://appstoreconnect.apple.com/">App Store Connect</a>中上传一个应用版本。有版本即可。</li></ul><h2 id="添加内购项目。"><a href="#添加内购项目。" class="headerlink" title="添加内购项目。"></a>添加内购项目。</h2><ul><li>跟着表单提交即可。</li><li>注意上传审核信息截屏和备注，提交完后当状态为准备提交即可。</li><li>产品ID是唯一字母数字ID。一旦该ID添加过，即使删除该产品，此ID也无法再次使用。<br><img src="/images/k3u1fbpfcp.png" alt="image.png"><br><img src="/images/7b0083e1.png" alt="image.png"></li><li>在版本中勾选上面添加好的内购项目<br><img src="/images/4fbab146a1.png" alt="image.png"></li></ul><h2 id="完善协议-税务"><a href="#完善协议-税务" class="headerlink" title="完善协议&#x2F;税务"></a>完善协议&#x2F;税务</h2><p><img src="/images/195f626e.png" alt="image.png"></p><ul><li>“免费app”默认的有效期，是和账号的到期时间保持一致的，而“付费应用程序”则需要进行进一步设置，点击右侧“查看并同意条款”。</li><li>填写地址信息，地址必须是英文&#x2F;拼音，如果地址太长可以分2行填写。</li><li>完善银行卡等信息，持卡人姓名必须是英文&#x2F;拼音。如果银行收款信息不清楚可以向银行致电查询。</li><li>设置【税务协议，美国税务协议】，<a href="https://zhuanlan.zhihu.com/p/64728939">详细流程点这里</a>。</li><li>审核通过之后状态为有效即可进行下一步<br><img src="/images/0d945672.png" alt="image.png"></li></ul><h2 id="证书配置"><a href="#证书配置" class="headerlink" title="证书配置"></a>证书配置</h2><ul><li>证书需要勾选，配置一个merchant。</li></ul><p><img src="/images/cf6ffd90d0.png" alt="image.png"></p><h2 id="代码对接"><a href="#代码对接" class="headerlink" title="代码对接"></a>代码对接</h2><ul><li>配置文件中勾选Apple内应用支付。这里需要注意，如果不全是虚拟商品或服务的(苹果的内购条件)，则可以同时集成别的支付，如微信支付宝，反之则不要勾选，不然苹果会认为你有隐藏的功能会绕过内购。<br>  <img src="/images/3389e266531.png" alt="image.png"></li><li>调用 <code>plus.payment.getChannels</code> 来获取支付通道</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">iospay</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> that = <span class="variable language_">this</span></span><br><span class="line">    uni.<span class="title function_">showLoading</span>(&#123;</span><br><span class="line">        <span class="attr">title</span>: <span class="string">&#x27;检测支付环境...&#x27;</span>,</span><br><span class="line">        <span class="attr">mask</span>: <span class="literal">true</span></span><br><span class="line">    &#125;)</span><br><span class="line">    plus.<span class="property">payment</span>.<span class="title function_">getChannels</span>(<span class="function">(<span class="params">channels</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// console.log(&#x27;channels=&gt;&#x27;, channels)</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i <span class="keyword">in</span> channels) &#123;</span><br><span class="line">            <span class="comment">// 判断是否苹果支付</span></span><br><span class="line">            <span class="keyword">if</span> (channels[i].<span class="property">id</span> === <span class="string">&#x27;appleiap&#x27;</span>) &#123;</span><br><span class="line">                that.<span class="property">iapChannel</span> = channels[i]</span><br><span class="line">                that.<span class="title function_">requestOrder</span>()</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (that.<span class="property">iapChannel</span> == <span class="string">&#x27;&#x27;</span>) &#123;</span><br><span class="line">            uni.<span class="title function_">hideLoading</span>()</span><br><span class="line">            uni.<span class="title function_">showToast</span>(&#123;</span><br><span class="line">                <span class="attr">icon</span>: <span class="string">&#x27;none&#x27;</span>,</span><br><span class="line">                <span class="attr">title</span>: <span class="string">&#x27;暂不支持苹果 iap 支付&#x27;</span></span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>调用上一步拿到对象的<code>requestOrder</code>方法<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">requestOrder</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;获取订单信息中...&#x27;</span>)</span><br><span class="line">    <span class="keyword">const</span> that = <span class="variable language_">this</span></span><br><span class="line">    <span class="comment">// ids 是平台申请拿到的内购商品的id</span></span><br><span class="line">    <span class="keyword">var</span> ids = [that.<span class="property">productId</span>];</span><br><span class="line">    that.<span class="property">iapChannel</span>.<span class="title function_">requestOrder</span>(ids, <span class="keyword">function</span>(<span class="params">event</span>) &#123;</span><br><span class="line">        <span class="comment">// 获取订单信息成功回调方法</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;获取订单信息成功=&gt;&#x27;</span>, event)</span><br><span class="line">        uni.<span class="title function_">hideLoading</span>()</span><br><span class="line">        that.<span class="title function_">topay</span>(that.<span class="property">productId</span>)</span><br><span class="line">    &#125;, <span class="keyword">function</span>(<span class="params">erroemsg</span>) &#123;</span><br><span class="line">        <span class="comment">// 获取订单信息失败回调方法  </span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;requestOrder failed: &#x27;</span> + <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(erroemsg));</span><br><span class="line">        uni.<span class="title function_">hideLoading</span>()</span><br><span class="line">        uni.<span class="title function_">showToast</span>(&#123;</span><br><span class="line">            <span class="attr">title</span>: <span class="string">&quot;获取支付通道失败：&quot;</span> + errormsg.<span class="property">message</span>,</span><br><span class="line">            <span class="attr">icon</span>: <span class="string">&#x27;none&#x27;</span></span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>最后调用<code>uni.requestPayment</code>拿到后端接口需要的交易id校验体</li><li>注意：发起支付必须要在requestOrder之后<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">topay</span>(<span class="params">id</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;发起支付中...&#x27;</span>)</span><br><span class="line">    <span class="keyword">const</span> that = <span class="variable language_">this</span></span><br><span class="line">    uni.<span class="title function_">showLoading</span>(&#123;</span><br><span class="line">        <span class="attr">title</span>: <span class="string">&#x27;充值中请勿离开&#x27;</span>,</span><br><span class="line">        <span class="attr">mask</span>: <span class="literal">true</span></span><br><span class="line">    &#125;)</span><br><span class="line">    uni.<span class="title function_">requestPayment</span>(&#123;</span><br><span class="line">        <span class="attr">provider</span>: <span class="string">&#x27;appleiap&#x27;</span>,</span><br><span class="line">        <span class="attr">orderInfo</span>: &#123;</span><br><span class="line">            <span class="attr">productid</span>: id <span class="comment">// 内购产品的product_id</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">success</span>: (<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;支付成功&#x27;</span>)</span><br><span class="line">            uni.<span class="title function_">hideLoading</span>()</span><br><span class="line">            <span class="keyword">const</span> orderId = that.<span class="property">orderId</span> <span class="comment">//这个订单id 是由后端返回的</span></span><br><span class="line">            <span class="keyword">const</span> transactionId = res.<span class="property">transactionIdentifier</span> <span class="comment">//交易id</span></span><br><span class="line">            <span class="keyword">const</span> payload = res.<span class="property">transactionReceipt</span> <span class="comment">//校验体</span></span><br><span class="line">            <span class="comment">//给自己的服务端通知，服务端做校验和支付成功的业务</span></span><br><span class="line">            <span class="keyword">let</span> url = <span class="string">&#x27;/api/user/iosNotify&#x27;</span>;</span><br><span class="line">            <span class="keyword">let</span> parames = &#123;</span><br><span class="line">                <span class="attr">transactionId</span>: transactionId,</span><br><span class="line">                <span class="attr">payload</span>: payload,</span><br><span class="line">                <span class="attr">orderId</span>: orderId</span><br><span class="line">            &#125;;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;iosNotifyParames=&gt;&#x27;</span>, parames)</span><br><span class="line">            <span class="variable language_">this</span>.$myRequest(&#123;</span><br><span class="line">                <span class="attr">url</span>: url,</span><br><span class="line">                <span class="attr">method</span>: <span class="string">&#x27;GET&#x27;</span>,</span><br><span class="line">                <span class="attr">data</span>: parames</span><br><span class="line">            &#125;).<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">                uni.<span class="title function_">showToast</span>(&#123;</span><br><span class="line">                    <span class="attr">icon</span>: <span class="string">&#x27;success&#x27;</span>,</span><br><span class="line">                    <span class="attr">title</span>: <span class="string">&#x27;支付成功&#x27;</span></span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;),</span><br><span class="line">        <span class="attr">fail</span>: <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;支付失败=&gt;&#x27;</span>, e)</span><br><span class="line">            uni.<span class="title function_">hideLoading</span>()</span><br><span class="line">            uni.<span class="title function_">showModal</span>(&#123;</span><br><span class="line">                <span class="attr">content</span>: <span class="string">&quot;支付失败&quot;</span>,</span><br><span class="line">                <span class="attr">showCancel</span>: <span class="literal">false</span></span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="过程中遇到的问题"><a href="#过程中遇到的问题" class="headerlink" title="过程中遇到的问题"></a>过程中遇到的问题</h2><ul><li><p>测试支付需要配置沙箱测试账号</p><p>  新的内购产品上线之前，测试人员一般需要对内购产品进行测试，但是内购涉及到钱，所以苹果为内购测试提供了 沙箱测试账号 的功能，Apple Pay 推出之后 沙箱测试账号，也可以用于 Apple Pay 支付的测试，沙箱测试账号 简单理解就是：只能用于内购和 Apple Pay 测试功能的 Apple ID，它并不是真实的 Apple ID。</p><p>  填写沙箱测试账号信息需要注意以下几点：</p><ul><li>电子邮件不能是别人已经注册过 AppleID 的邮箱</li><li>电子邮箱可以不是真实的邮箱，但是必须符合邮箱格式</li><li>App Store 地区的选择，测试的时候弹出的提示框以及结算的价格会按照沙箱账号选择的地区来，建议测试的时候新建几个不同地区的账号进行测试！！！</li></ul><p>  沙箱账号测试的使用：</p><ul><li>首先沙箱测试账号必须在真机环境下进行测试，并且是 adhoc 证书或者 develop 证书签名的安装包，沙盒账号不支持直接从 App Store 下载的安装包</li><li>去真机的 App Store 退出真实的 Apple ID 账号，退出之后并不需要在App Store 里面登录沙箱测试账号</li><li>然后去 App 里面测试购买商品，会弹出登录框，选择 <code>使用现有的 Apple ID</code>，然后登录沙箱测试账号，登录成功之后会弹出购买提示框，点击 <code>购买</code>，然后会弹出提示框完成购买。</li></ul></li><li><p><code>requestOrder</code>函数成功和失败的回调都没响应</p><ul><li>检查内购产品和税务是否完善</li></ul></li><li><p><code>requestPayment</code>页面提示支付成功，但是<code>success</code>回调无响应</p><ul><li>沙箱的回调特别特别慢且随缘…</li><li>支付成功后，杀死app重新进入，再次唤起支付，上次的回调有‘几率’拿到。</li></ul></li></ul><p>个人总结，如有不妥之处，烦请指出。</p>]]></content>
      
      
      
        <tags>
            
            <tag> UniApp </tag>
            
            <tag> ApplePay </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
